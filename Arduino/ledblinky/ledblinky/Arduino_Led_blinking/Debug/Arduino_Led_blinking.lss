
Arduino_Led_blinking.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00001186  0000121a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001186  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000070  00800126  00800126  00001240  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001240  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001270  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002f0  00000000  00000000  000012b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000648b  00000000  00000000  000015a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001d50  00000000  00000000  00007a2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ced  00000000  00000000  0000977b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000083c  00000000  00000000  0000b468  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000271f  00000000  00000000  0000bca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002730  00000000  00000000  0000e3c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000390  00000000  00000000  00010af3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
       8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
       c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      10:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      14:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      18:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      1c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      20:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      24:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      28:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__vector_10>
      2c:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__vector_11>
      30:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      34:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      38:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      3c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      40:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      44:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      48:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      4c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      50:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      54:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      58:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      5c:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__vector_23>
      60:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      64:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      68:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      6c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      70:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      74:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      78:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      7c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      80:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      84:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      88:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      8c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      90:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      94:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      98:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      9c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      a0:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      a4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      a8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      ac:	8d 06       	cpc	r8, r29
      ae:	90 06       	cpc	r9, r16
      b0:	7f 06       	cpc	r7, r31
      b2:	83 06       	cpc	r8, r19
      b4:	89 06       	cpc	r8, r25
      b6:	b1 06       	cpc	r11, r17
      b8:	b1 06       	cpc	r11, r17
      ba:	b1 06       	cpc	r11, r17
      bc:	94 06       	cpc	r9, r20
      be:	98 06       	cpc	r9, r24
      c0:	9c 06       	cpc	r9, r28
      c2:	a2 06       	cpc	r10, r18
      c4:	a6 06       	cpc	r10, r22
      c6:	b1 06       	cpc	r11, r17
      c8:	ac 06       	cpc	r10, r28

000000ca <USB_DeviceDescriptorIAD>:
      ca:	12 01 00 02 ef 02 01 40 41 23 41 80 00 01 01 02     .......@A#A.....
      da:	03 01                                               ..

000000dc <STRING_MANUFACTURER>:
      dc:	41 72 64 75 69 6e 6f 20 4c 4c 43 00                 Arduino LLC.

000000e8 <STRING_PRODUCT>:
      e8:	41 72 64 75 69 6e 6f 20 59 75 6e 00                 Arduino Yun.

000000f4 <STRING_LANGUAGE>:
      f4:	04 03 09 04                                         ....

000000f8 <digital_pin_to_timer_PGM>:
      f8:	00 00 00 02 00 09 0f 00 00 03 04 01 00 0c 00 00     ................
	...

00000117 <digital_pin_to_bit_mask_PGM>:
     117:	04 08 02 01 10 40 80 40 10 20 40 80 40 80 08 02     .....@.@. @.@...
     127:	04 01 80 40 20 10 02 01 10 80 10 20 40 40 20        ...@ ...... @@ 

00000136 <digital_pin_to_port_PGM>:
     136:	04 04 04 04 04 03 04 05 02 02 02 02 04 03 02 02     ................
     146:	02 02 06 06 06 06 06 06 04 04 02 02 02 04 04        ...............

00000155 <port_to_output_PGM>:
     155:	00 00 00 00 25 00 28 00 2b 00 2e 00 31 00           ....%.(.+...1.

00000163 <port_to_mode_PGM>:
     163:	00 00 00 00 24 00 27 00 2a 00 2d 00 30 00           ....$.'.*.-.0.

00000171 <_cdcInterface>:
     171:	08 0b 00 02 02 02 01 00 09 04 00 00 01 02 02 00     ................
     181:	00 05 24 00 10 01 05 24 01 01 01 04 24 02 06 05     ..$....$....$...
     191:	24 06 00 01 07 05 81 03 10 00 40 09 04 01 00 02     $.........@.....
     1a1:	0a 00 00 00 07 05 02 02 40 00 00 07 05 83 02 40     ........@......@
     1b1:	00 00 00                                            ...

000001b4 <__ctors_start>:
     1b4:	0c 08       	sbc	r0, r12

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	da e0       	ldi	r29, 0x0A	; 10
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	e6 e8       	ldi	r30, 0x86	; 134
     1ca:	f1 e1       	ldi	r31, 0x11	; 17
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a6 32       	cpi	r26, 0x26	; 38
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a6 e2       	ldi	r26, 0x26	; 38
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	a6 39       	cpi	r26, 0x96	; 150
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>

000001e8 <__do_global_ctors>:
     1e8:	10 e0       	ldi	r17, 0x00	; 0
     1ea:	cb ed       	ldi	r28, 0xDB	; 219
     1ec:	d0 e0       	ldi	r29, 0x00	; 0
     1ee:	04 c0       	rjmp	.+8      	; 0x1f8 <__do_global_ctors+0x10>
     1f0:	21 97       	sbiw	r28, 0x01	; 1
     1f2:	fe 01       	movw	r30, r28
     1f4:	0e 94 bb 08 	call	0x1176	; 0x1176 <__tablejump2__>
     1f8:	ca 3d       	cpi	r28, 0xDA	; 218
     1fa:	d1 07       	cpc	r29, r17
     1fc:	c9 f7       	brne	.-14     	; 0x1f0 <__do_global_ctors+0x8>
     1fe:	0e 94 1e 01 	call	0x23c	; 0x23c <main>
     202:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <_exit>

00000206 <__bad_interrupt>:
     206:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020a <setup>:
ï»¿/*Begining of Auto generated code by Atmel studio */
#include <Arduino.h>

void setup() {
  // initialize digital pin LED_BUILTIN as an output.
  pinMode(13, OUTPUT);
     20a:	61 e0       	ldi	r22, 0x01	; 1
     20c:	8d e0       	ldi	r24, 0x0D	; 13
     20e:	0c 94 b2 06 	jmp	0xd64	; 0xd64 <pinMode>

00000212 <loop>:
}

// the loop function runs over and over again forever
void loop() {
	digitalWrite(13, HIGH);   // turn the LED on (HIGH is the voltage level)
     212:	61 e0       	ldi	r22, 0x01	; 1
     214:	8d e0       	ldi	r24, 0x0D	; 13
     216:	0e 94 ee 06 	call	0xddc	; 0xddc <digitalWrite>
	delay(1000);                       // wait for a second
     21a:	68 ee       	ldi	r22, 0xE8	; 232
     21c:	73 e0       	ldi	r23, 0x03	; 3
     21e:	80 e0       	ldi	r24, 0x00	; 0
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <delay>
	digitalWrite(13, LOW);    // turn the LED off by making the voltage LOW
     226:	60 e0       	ldi	r22, 0x00	; 0
     228:	8d e0       	ldi	r24, 0x0D	; 13
     22a:	0e 94 ee 06 	call	0xddc	; 0xddc <digitalWrite>
	delay(1000);                       // wait for a second
     22e:	68 ee       	ldi	r22, 0xE8	; 232
     230:	73 e0       	ldi	r23, 0x03	; 3
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	0c 94 e3 05 	jmp	0xbc6	; 0xbc6 <delay>

0000023a <initVariant>:
     23a:	08 95       	ret

0000023c <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
     23c:	0e 94 1f 06 	call	0xc3e	; 0xc3e <init>

	initVariant();
     240:	0e 94 1d 01 	call	0x23a	; 0x23a <initVariant>

#if defined(USBCON)
	USBDevice.attach();
     244:	86 e2       	ldi	r24, 0x26	; 38
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	0e 94 57 05 	call	0xaae	; 0xaae <_ZN10USBDevice_6attachEv>
#endif
	
	setup();
     24c:	0e 94 05 01 	call	0x20a	; 0x20a <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
     250:	c0 e0       	ldi	r28, 0x00	; 0
     252:	d0 e0       	ldi	r29, 0x00	; 0
#endif
	
	setup();
    
	for (;;) {
		loop();
     254:	0e 94 09 01 	call	0x212	; 0x212 <loop>
		if (serialEventRun) serialEventRun();
     258:	20 97       	sbiw	r28, 0x00	; 0
     25a:	e1 f3       	breq	.-8      	; 0x254 <main+0x18>
     25c:	0e 94 00 00 	call	0	; 0x0 <__vectors>
     260:	f9 cf       	rjmp	.-14     	; 0x254 <main+0x18>

00000262 <_ZL4RecvPVhh>:
//=======================================================================
//=======================================================================

USBDevice_ USBDevice;

USBDevice_::USBDevice_()
     262:	61 50       	subi	r22, 0x01	; 1
     264:	30 f0       	brcs	.+12     	; 0x272 <_ZL4RecvPVhh+0x10>
     266:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     26a:	fc 01       	movw	r30, r24
     26c:	20 83       	st	Z, r18
     26e:	01 96       	adiw	r24, 0x01	; 1
     270:	f8 cf       	rjmp	.-16     	; 0x262 <_ZL4RecvPVhh>
     272:	28 98       	cbi	0x05, 0	; 5
     274:	84 e6       	ldi	r24, 0x64	; 100
     276:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <RxLEDPulse>
     27a:	08 95       	ret

0000027c <_ZL11SendControlh>:
     27c:	40 91 29 01 	lds	r20, 0x0129	; 0x800129 <_ZL6_cmark>
     280:	50 91 2a 01 	lds	r21, 0x012A	; 0x80012a <_ZL6_cmark+0x1>
     284:	20 91 27 01 	lds	r18, 0x0127	; 0x800127 <_ZL5_cend>
     288:	30 91 28 01 	lds	r19, 0x0128	; 0x800128 <_ZL5_cend+0x1>
     28c:	42 17       	cp	r20, r18
     28e:	53 07       	cpc	r21, r19
     290:	b4 f4       	brge	.+44     	; 0x2be <_ZL11SendControlh+0x42>
     292:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     296:	95 70       	andi	r25, 0x05	; 5
     298:	e1 f3       	breq	.-8      	; 0x292 <_ZL11SendControlh+0x16>
     29a:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     29e:	92 fd       	sbrc	r25, 2
     2a0:	19 c0       	rjmp	.+50     	; 0x2d4 <_ZL11SendControlh+0x58>
     2a2:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     2a6:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <_ZL6_cmark>
     2aa:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <_ZL6_cmark+0x1>
     2ae:	01 96       	adiw	r24, 0x01	; 1
     2b0:	8f 73       	andi	r24, 0x3F	; 63
     2b2:	99 27       	eor	r25, r25
     2b4:	89 2b       	or	r24, r25
     2b6:	19 f4       	brne	.+6      	; 0x2be <_ZL11SendControlh+0x42>
     2b8:	8e ef       	ldi	r24, 0xFE	; 254
     2ba:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     2be:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <_ZL6_cmark>
     2c2:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <_ZL6_cmark+0x1>
     2c6:	01 96       	adiw	r24, 0x01	; 1
     2c8:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <_ZL6_cmark+0x1>
     2cc:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <_ZL6_cmark>
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	08 95       	ret
     2d4:	80 e0       	ldi	r24, 0x00	; 0
     2d6:	08 95       	ret

000002d8 <_ZL24USB_SendStringDescriptorPKhhh>:
     2d8:	df 92       	push	r13
     2da:	ef 92       	push	r14
     2dc:	ff 92       	push	r15
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
     2e6:	d8 2e       	mov	r13, r24
     2e8:	f9 2e       	mov	r15, r25
     2ea:	e4 2e       	mov	r14, r20
     2ec:	06 2f       	mov	r16, r22
     2ee:	10 e0       	ldi	r17, 0x00	; 0
     2f0:	c8 01       	movw	r24, r16
     2f2:	01 96       	adiw	r24, 0x01	; 1
     2f4:	88 0f       	add	r24, r24
     2f6:	0e 94 3e 01 	call	0x27c	; 0x27c <_ZL11SendControlh>
     2fa:	83 e0       	ldi	r24, 0x03	; 3
     2fc:	0e 94 3e 01 	call	0x27c	; 0x27c <_ZL11SendControlh>
     300:	cd 2d       	mov	r28, r13
     302:	df 2d       	mov	r29, r15
     304:	0c 0f       	add	r16, r28
     306:	1d 1f       	adc	r17, r29
     308:	c0 17       	cp	r28, r16
     30a:	d1 07       	cpc	r29, r17
     30c:	89 f0       	breq	.+34     	; 0x330 <_ZL24USB_SendStringDescriptorPKhhh+0x58>
     30e:	e7 fe       	sbrs	r14, 7
     310:	03 c0       	rjmp	.+6      	; 0x318 <_ZL24USB_SendStringDescriptorPKhhh+0x40>
     312:	fe 01       	movw	r30, r28
     314:	84 91       	lpm	r24, Z
     316:	01 c0       	rjmp	.+2      	; 0x31a <_ZL24USB_SendStringDescriptorPKhhh+0x42>
     318:	88 81       	ld	r24, Y
     31a:	0e 94 3e 01 	call	0x27c	; 0x27c <_ZL11SendControlh>
     31e:	f8 2e       	mov	r15, r24
     320:	80 e0       	ldi	r24, 0x00	; 0
     322:	0e 94 3e 01 	call	0x27c	; 0x27c <_ZL11SendControlh>
     326:	8f 21       	and	r24, r15
     328:	21 96       	adiw	r28, 0x01	; 1
     32a:	81 11       	cpse	r24, r1
     32c:	ed cf       	rjmp	.-38     	; 0x308 <_ZL24USB_SendStringDescriptorPKhhh+0x30>
     32e:	01 c0       	rjmp	.+2      	; 0x332 <_ZL24USB_SendStringDescriptorPKhhh+0x5a>
     330:	81 e0       	ldi	r24, 0x01	; 1
     332:	df 91       	pop	r29
     334:	cf 91       	pop	r28
     336:	1f 91       	pop	r17
     338:	0f 91       	pop	r16
     33a:	ff 90       	pop	r15
     33c:	ef 90       	pop	r14
     33e:	df 90       	pop	r13
     340:	08 95       	ret

00000342 <_ZL15USB_ClockEnablev>:
     342:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <__TEXT_REGION_LENGTH__+0x7e00d7>
     346:	81 60       	ori	r24, 0x01	; 1
     348:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <__TEXT_REGION_LENGTH__+0x7e00d7>
     34c:	80 ea       	ldi	r24, 0xA0	; 160
     34e:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     352:	89 b5       	in	r24, 0x29	; 41
     354:	80 61       	ori	r24, 0x10	; 16
     356:	89 bd       	out	0x29, r24	; 41
     358:	89 b5       	in	r24, 0x29	; 41
     35a:	82 60       	ori	r24, 0x02	; 2
     35c:	89 bd       	out	0x29, r24	; 41
     35e:	09 b4       	in	r0, 0x29	; 41
     360:	00 fe       	sbrs	r0, 0
     362:	fd cf       	rjmp	.-6      	; 0x35e <_ZL15USB_ClockEnablev+0x1c>
     364:	61 e0       	ldi	r22, 0x01	; 1
     366:	70 e0       	ldi	r23, 0x00	; 0
     368:	80 e0       	ldi	r24, 0x00	; 0
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <delay>
     370:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     374:	8f 7c       	andi	r24, 0xCF	; 207
     376:	80 61       	ori	r24, 0x10	; 16
     378:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     37c:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
     380:	80 7f       	andi	r24, 0xF0	; 240
     382:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
     386:	08 95       	ret

00000388 <_ZL14SendInterfacesv>:
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	1f 92       	push	r1
     38e:	cd b7       	in	r28, 0x3d	; 61
     390:	de b7       	in	r29, 0x3e	; 62
     392:	19 82       	std	Y+1, r1	; 0x01
     394:	ce 01       	movw	r24, r28
     396:	01 96       	adiw	r24, 0x01	; 1
     398:	0e 94 7f 07 	call	0xefe	; 0xefe <_Z16CDC_GetInterfacePh>
     39c:	0e 94 a7 08 	call	0x114e	; 0x114e <_Z12PluggableUSBv>
     3a0:	be 01       	movw	r22, r28
     3a2:	6f 5f       	subi	r22, 0xFF	; 255
     3a4:	7f 4f       	sbci	r23, 0xFF	; 255
     3a6:	0e 94 22 08 	call	0x1044	; 0x1044 <_ZN13PluggableUSB_12getInterfaceEPh>
     3aa:	89 81       	ldd	r24, Y+1	; 0x01
     3ac:	0f 90       	pop	r0
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	08 95       	ret

000003b4 <_ZN6LockEPC1Eh>:
     3b4:	2f b7       	in	r18, 0x3f	; 63
     3b6:	fc 01       	movw	r30, r24
     3b8:	20 83       	st	Z, r18
     3ba:	f8 94       	cli
     3bc:	67 70       	andi	r22, 0x07	; 7
     3be:	60 93 e9 00 	sts	0x00E9, r22	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     3c2:	08 95       	ret

000003c4 <_Z13USB_Availableh>:
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	1f 92       	push	r1
     3ca:	cd b7       	in	r28, 0x3d	; 61
     3cc:	de b7       	in	r29, 0x3e	; 62
     3ce:	68 2f       	mov	r22, r24
     3d0:	ce 01       	movw	r24, r28
     3d2:	01 96       	adiw	r24, 0x01	; 1
     3d4:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN6LockEPC1Eh>
     3d8:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     3dc:	99 81       	ldd	r25, Y+1	; 0x01
     3de:	9f bf       	out	0x3f, r25	; 63
     3e0:	0f 90       	pop	r0
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	08 95       	ret

000003e8 <_Z8USB_RecvhPvi>:
     3e8:	ef 92       	push	r14
     3ea:	ff 92       	push	r15
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	1f 92       	push	r1
     3f6:	cd b7       	in	r28, 0x3d	; 61
     3f8:	de b7       	in	r29, 0x3e	; 62
     3fa:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <_usbConfiguration>
     3fe:	99 23       	and	r25, r25
     400:	11 f0       	breq	.+4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     402:	57 ff       	sbrs	r21, 7
     404:	03 c0       	rjmp	.+6      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     406:	8f ef       	ldi	r24, 0xFF	; 255
     408:	9f ef       	ldi	r25, 0xFF	; 255
     40a:	29 c0       	rjmp	.+82     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     40c:	8a 01       	movw	r16, r20
     40e:	7b 01       	movw	r14, r22
     410:	68 2f       	mov	r22, r24
     412:	ce 01       	movw	r24, r28
     414:	01 96       	adiw	r24, 0x01	; 1
     416:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN6LockEPC1Eh>
     41a:	20 91 f2 00 	lds	r18, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	02 17       	cp	r16, r18
     422:	13 07       	cpc	r17, r19
     424:	0c f4       	brge	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     426:	98 01       	movw	r18, r16
     428:	82 2f       	mov	r24, r18
     42a:	f7 01       	movw	r30, r14
     42c:	94 e6       	ldi	r25, 0x64	; 100
     42e:	81 50       	subi	r24, 0x01	; 1
     430:	38 f0       	brcs	.+14     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     432:	28 98       	cbi	0x05, 0	; 5
     434:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <RxLEDPulse>
     438:	40 91 f1 00 	lds	r20, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     43c:	41 93       	st	Z+, r20
     43e:	f7 cf       	rjmp	.-18     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     440:	21 15       	cp	r18, r1
     442:	31 05       	cpc	r19, r1
     444:	21 f0       	breq	.+8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     446:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     44a:	88 23       	and	r24, r24
     44c:	21 f0       	breq	.+8      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     44e:	89 81       	ldd	r24, Y+1	; 0x01
     450:	8f bf       	out	0x3f, r24	; 63
     452:	c9 01       	movw	r24, r18
     454:	04 c0       	rjmp	.+8      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     456:	8b e6       	ldi	r24, 0x6B	; 107
     458:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     45c:	f8 cf       	rjmp	.-16     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     45e:	0f 90       	pop	r0
     460:	df 91       	pop	r29
     462:	cf 91       	pop	r28
     464:	1f 91       	pop	r17
     466:	0f 91       	pop	r16
     468:	ff 90       	pop	r15
     46a:	ef 90       	pop	r14
     46c:	08 95       	ret

0000046e <_Z8USB_Recvh>:
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29
     472:	1f 92       	push	r1
     474:	cd b7       	in	r28, 0x3d	; 61
     476:	de b7       	in	r29, 0x3e	; 62
     478:	41 e0       	ldi	r20, 0x01	; 1
     47a:	50 e0       	ldi	r21, 0x00	; 0
     47c:	be 01       	movw	r22, r28
     47e:	6f 5f       	subi	r22, 0xFF	; 255
     480:	7f 4f       	sbci	r23, 0xFF	; 255
     482:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <_Z8USB_RecvhPvi>
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	19 f4       	brne	.+6      	; 0x490 <_Z8USB_Recvh+0x22>
     48a:	89 81       	ldd	r24, Y+1	; 0x01
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	02 c0       	rjmp	.+4      	; 0x494 <_Z8USB_Recvh+0x26>
     490:	8f ef       	ldi	r24, 0xFF	; 255
     492:	9f ef       	ldi	r25, 0xFF	; 255
     494:	0f 90       	pop	r0
     496:	df 91       	pop	r29
     498:	cf 91       	pop	r28
     49a:	08 95       	ret

0000049c <_Z13USB_SendSpaceh>:
     49c:	cf 93       	push	r28
     49e:	df 93       	push	r29
     4a0:	1f 92       	push	r1
     4a2:	cd b7       	in	r28, 0x3d	; 61
     4a4:	de b7       	in	r29, 0x3e	; 62
     4a6:	68 2f       	mov	r22, r24
     4a8:	ce 01       	movw	r24, r28
     4aa:	01 96       	adiw	r24, 0x01	; 1
     4ac:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN6LockEPC1Eh>
     4b0:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     4b4:	89 2f       	mov	r24, r25
     4b6:	80 72       	andi	r24, 0x20	; 32
     4b8:	95 ff       	sbrs	r25, 5
     4ba:	04 c0       	rjmp	.+8      	; 0x4c4 <_Z13USB_SendSpaceh+0x28>
     4bc:	90 91 f2 00 	lds	r25, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     4c0:	80 e4       	ldi	r24, 0x40	; 64
     4c2:	89 1b       	sub	r24, r25
     4c4:	99 81       	ldd	r25, Y+1	; 0x01
     4c6:	9f bf       	out	0x3f, r25	; 63
     4c8:	0f 90       	pop	r0
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	08 95       	ret

000004d0 <_Z8USB_SendhPKvi>:
     4d0:	5f 92       	push	r5
     4d2:	6f 92       	push	r6
     4d4:	7f 92       	push	r7
     4d6:	8f 92       	push	r8
     4d8:	9f 92       	push	r9
     4da:	af 92       	push	r10
     4dc:	bf 92       	push	r11
     4de:	cf 92       	push	r12
     4e0:	df 92       	push	r13
     4e2:	ef 92       	push	r14
     4e4:	ff 92       	push	r15
     4e6:	0f 93       	push	r16
     4e8:	1f 93       	push	r17
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
     4ee:	1f 92       	push	r1
     4f0:	cd b7       	in	r28, 0x3d	; 61
     4f2:	de b7       	in	r29, 0x3e	; 62
     4f4:	98 2e       	mov	r9, r24
     4f6:	6b 01       	movw	r12, r22
     4f8:	b4 2e       	mov	r11, r20
     4fa:	05 2f       	mov	r16, r21
     4fc:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <_usbConfiguration>
     500:	81 11       	cpse	r24, r1
     502:	03 c0       	rjmp	.+6      	; 0x50a <_Z8USB_SendhPKvi+0x3a>
     504:	8f ef       	ldi	r24, 0xFF	; 255
     506:	9f ef       	ldi	r25, 0xFF	; 255
     508:	77 c0       	rjmp	.+238    	; 0x5f8 <_Z8USB_SendhPKvi+0x128>
     50a:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <_usbSuspendState>
     50e:	80 ff       	sbrs	r24, 0
     510:	05 c0       	rjmp	.+10     	; 0x51c <_Z8USB_SendhPKvi+0x4c>
     512:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
     516:	82 60       	ori	r24, 0x02	; 2
     518:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
     51c:	eb 2c       	mov	r14, r11
     51e:	f0 2e       	mov	r15, r16
     520:	a1 2c       	mov	r10, r1
     522:	8a ef       	ldi	r24, 0xFA	; 250
     524:	88 2e       	mov	r8, r24
     526:	89 2d       	mov	r24, r9
     528:	80 72       	andi	r24, 0x20	; 32
     52a:	68 2e       	mov	r6, r24
     52c:	89 2d       	mov	r24, r9
     52e:	80 74       	andi	r24, 0x40	; 64
     530:	58 2e       	mov	r5, r24
     532:	9a e3       	ldi	r25, 0x3A	; 58
     534:	79 2e       	mov	r7, r25
     536:	e1 14       	cp	r14, r1
     538:	f1 04       	cpc	r15, r1
     53a:	19 f4       	brne	.+6      	; 0x542 <_Z8USB_SendhPKvi+0x72>
     53c:	aa 20       	and	r10, r10
     53e:	09 f4       	brne	.+2      	; 0x542 <_Z8USB_SendhPKvi+0x72>
     540:	55 c0       	rjmp	.+170    	; 0x5ec <_Z8USB_SendhPKvi+0x11c>
     542:	89 2d       	mov	r24, r9
     544:	0e 94 4e 02 	call	0x49c	; 0x49c <_Z13USB_SendSpaceh>
     548:	18 2f       	mov	r17, r24
     54a:	81 11       	cpse	r24, r1
     54c:	0a c0       	rjmp	.+20     	; 0x562 <_Z8USB_SendhPKvi+0x92>
     54e:	8a 94       	dec	r8
     550:	88 20       	and	r8, r8
     552:	c1 f2       	breq	.-80     	; 0x504 <_Z8USB_SendhPKvi+0x34>
     554:	61 e0       	ldi	r22, 0x01	; 1
     556:	70 e0       	ldi	r23, 0x00	; 0
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <delay>
     560:	ea cf       	rjmp	.-44     	; 0x536 <_Z8USB_SendhPKvi+0x66>
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	e8 16       	cp	r14, r24
     566:	f9 06       	cpc	r15, r25
     568:	0c f4       	brge	.+2      	; 0x56c <_Z8USB_SendhPKvi+0x9c>
     56a:	1e 2d       	mov	r17, r14
     56c:	69 2d       	mov	r22, r9
     56e:	ce 01       	movw	r24, r28
     570:	01 96       	adiw	r24, 0x01	; 1
     572:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN6LockEPC1Eh>
     576:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     57a:	85 ff       	sbrs	r24, 5
     57c:	34 c0       	rjmp	.+104    	; 0x5e6 <_Z8USB_SendhPKvi+0x116>
     57e:	81 2f       	mov	r24, r17
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	e8 1a       	sub	r14, r24
     584:	f9 0a       	sbc	r15, r25
     586:	66 20       	and	r6, r6
     588:	29 f0       	breq	.+10     	; 0x594 <_Z8USB_SendhPKvi+0xc4>
     58a:	11 50       	subi	r17, 0x01	; 1
     58c:	a0 f0       	brcs	.+40     	; 0x5b6 <_Z8USB_SendhPKvi+0xe6>
     58e:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     592:	fb cf       	rjmp	.-10     	; 0x58a <_Z8USB_SendhPKvi+0xba>
     594:	f6 01       	movw	r30, r12
     596:	97 fe       	sbrs	r9, 7
     598:	0a c0       	rjmp	.+20     	; 0x5ae <_Z8USB_SendhPKvi+0xde>
     59a:	11 50       	subi	r17, 0x01	; 1
     59c:	50 f0       	brcs	.+20     	; 0x5b2 <_Z8USB_SendhPKvi+0xe2>
     59e:	24 91       	lpm	r18, Z
     5a0:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     5a4:	31 96       	adiw	r30, 0x01	; 1
     5a6:	f9 cf       	rjmp	.-14     	; 0x59a <_Z8USB_SendhPKvi+0xca>
     5a8:	21 91       	ld	r18, Z+
     5aa:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     5ae:	11 50       	subi	r17, 0x01	; 1
     5b0:	d8 f7       	brcc	.-10     	; 0x5a8 <_Z8USB_SendhPKvi+0xd8>
     5b2:	c8 0e       	add	r12, r24
     5b4:	d9 1e       	adc	r13, r25
     5b6:	aa 20       	and	r10, r10
     5b8:	19 f0       	breq	.+6      	; 0x5c0 <_Z8USB_SendhPKvi+0xf0>
     5ba:	70 92 e8 00 	sts	0x00E8, r7	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     5be:	0b c0       	rjmp	.+22     	; 0x5d6 <_Z8USB_SendhPKvi+0x106>
     5c0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     5c4:	85 fd       	sbrc	r24, 5
     5c6:	09 c0       	rjmp	.+18     	; 0x5da <_Z8USB_SendhPKvi+0x10a>
     5c8:	70 92 e8 00 	sts	0x00E8, r7	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     5cc:	aa 24       	eor	r10, r10
     5ce:	a3 94       	inc	r10
     5d0:	e1 14       	cp	r14, r1
     5d2:	f1 04       	cpc	r15, r1
     5d4:	41 f0       	breq	.+16     	; 0x5e6 <_Z8USB_SendhPKvi+0x116>
     5d6:	a1 2c       	mov	r10, r1
     5d8:	06 c0       	rjmp	.+12     	; 0x5e6 <_Z8USB_SendhPKvi+0x116>
     5da:	e1 14       	cp	r14, r1
     5dc:	f1 04       	cpc	r15, r1
     5de:	19 f4       	brne	.+6      	; 0x5e6 <_Z8USB_SendhPKvi+0x116>
     5e0:	51 10       	cpse	r5, r1
     5e2:	70 92 e8 00 	sts	0x00E8, r7	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     5e6:	89 81       	ldd	r24, Y+1	; 0x01
     5e8:	8f bf       	out	0x3f, r24	; 63
     5ea:	a5 cf       	rjmp	.-182    	; 0x536 <_Z8USB_SendhPKvi+0x66>
     5ec:	5d 98       	cbi	0x0b, 5	; 11
     5ee:	84 e6       	ldi	r24, 0x64	; 100
     5f0:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <TxLEDPulse>
     5f4:	8b 2d       	mov	r24, r11
     5f6:	90 2f       	mov	r25, r16
     5f8:	0f 90       	pop	r0
     5fa:	df 91       	pop	r29
     5fc:	cf 91       	pop	r28
     5fe:	1f 91       	pop	r17
     600:	0f 91       	pop	r16
     602:	ff 90       	pop	r15
     604:	ef 90       	pop	r14
     606:	df 90       	pop	r13
     608:	cf 90       	pop	r12
     60a:	bf 90       	pop	r11
     60c:	af 90       	pop	r10
     60e:	9f 90       	pop	r9
     610:	8f 90       	pop	r8
     612:	7f 90       	pop	r7
     614:	6f 90       	pop	r6
     616:	5f 90       	pop	r5
     618:	08 95       	ret

0000061a <_Z11InitControli>:
     61a:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     61e:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <_ZL6_cmark+0x1>
     622:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <_ZL6_cmark>
     626:	90 93 28 01 	sts	0x0128, r25	; 0x800128 <_ZL5_cend+0x1>
     62a:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <_ZL5_cend>
     62e:	08 95       	ret

00000630 <_Z15USB_SendControlhPKvi>:
     630:	df 92       	push	r13
     632:	ef 92       	push	r14
     634:	ff 92       	push	r15
     636:	0f 93       	push	r16
     638:	1f 93       	push	r17
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
     63e:	d8 2e       	mov	r13, r24
     640:	8a 01       	movw	r16, r20
     642:	7b 01       	movw	r14, r22
     644:	e4 0e       	add	r14, r20
     646:	f5 1e       	adc	r15, r21
     648:	eb 01       	movw	r28, r22
     64a:	ce 15       	cp	r28, r14
     64c:	df 05       	cpc	r29, r15
     64e:	71 f0       	breq	.+28     	; 0x66c <_Z15USB_SendControlhPKvi+0x3c>
     650:	d7 fe       	sbrs	r13, 7
     652:	03 c0       	rjmp	.+6      	; 0x65a <_Z15USB_SendControlhPKvi+0x2a>
     654:	fe 01       	movw	r30, r28
     656:	84 91       	lpm	r24, Z
     658:	01 c0       	rjmp	.+2      	; 0x65c <_Z15USB_SendControlhPKvi+0x2c>
     65a:	88 81       	ld	r24, Y
     65c:	0e 94 3e 01 	call	0x27c	; 0x27c <_ZL11SendControlh>
     660:	21 96       	adiw	r28, 0x01	; 1
     662:	81 11       	cpse	r24, r1
     664:	f2 cf       	rjmp	.-28     	; 0x64a <_Z15USB_SendControlhPKvi+0x1a>
     666:	8f ef       	ldi	r24, 0xFF	; 255
     668:	9f ef       	ldi	r25, 0xFF	; 255
     66a:	01 c0       	rjmp	.+2      	; 0x66e <_Z15USB_SendControlhPKvi+0x3e>
     66c:	c8 01       	movw	r24, r16
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	1f 91       	pop	r17
     674:	0f 91       	pop	r16
     676:	ff 90       	pop	r15
     678:	ef 90       	pop	r14
     67a:	df 90       	pop	r13
     67c:	08 95       	ret

0000067e <_Z15USB_RecvControlPvi>:
     67e:	af 92       	push	r10
     680:	bf 92       	push	r11
     682:	df 92       	push	r13
     684:	ef 92       	push	r14
     686:	ff 92       	push	r15
     688:	0f 93       	push	r16
     68a:	1f 93       	push	r17
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	5c 01       	movw	r10, r24
     692:	8b 01       	movw	r16, r22
     694:	eb 01       	movw	r28, r22
     696:	9b ef       	ldi	r25, 0xFB	; 251
     698:	d9 2e       	mov	r13, r25
     69a:	20 97       	sbiw	r28, 0x00	; 0
     69c:	c1 f0       	breq	.+48     	; 0x6ce <_Z15USB_RecvControlPvi+0x50>
     69e:	7e 01       	movw	r14, r28
     6a0:	c1 34       	cpi	r28, 0x41	; 65
     6a2:	d1 05       	cpc	r29, r1
     6a4:	1c f0       	brlt	.+6      	; 0x6ac <_Z15USB_RecvControlPvi+0x2e>
     6a6:	80 e4       	ldi	r24, 0x40	; 64
     6a8:	e8 2e       	mov	r14, r24
     6aa:	f1 2c       	mov	r15, r1
     6ac:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     6b0:	82 ff       	sbrs	r24, 2
     6b2:	fc cf       	rjmp	.-8      	; 0x6ac <_Z15USB_RecvControlPvi+0x2e>
     6b4:	c8 01       	movw	r24, r16
     6b6:	8c 1b       	sub	r24, r28
     6b8:	9d 0b       	sbc	r25, r29
     6ba:	6e 2d       	mov	r22, r14
     6bc:	8a 0d       	add	r24, r10
     6be:	9b 1d       	adc	r25, r11
     6c0:	0e 94 31 01 	call	0x262	; 0x262 <_ZL4RecvPVhh>
     6c4:	d0 92 e8 00 	sts	0x00E8, r13	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     6c8:	ce 19       	sub	r28, r14
     6ca:	df 09       	sbc	r29, r15
     6cc:	e6 cf       	rjmp	.-52     	; 0x69a <_Z15USB_RecvControlPvi+0x1c>
     6ce:	c8 01       	movw	r24, r16
     6d0:	df 91       	pop	r29
     6d2:	cf 91       	pop	r28
     6d4:	1f 91       	pop	r17
     6d6:	0f 91       	pop	r16
     6d8:	ff 90       	pop	r15
     6da:	ef 90       	pop	r14
     6dc:	df 90       	pop	r13
     6de:	bf 90       	pop	r11
     6e0:	af 90       	pop	r10
     6e2:	08 95       	ret

000006e4 <__vector_11>:
     6e4:	1f 92       	push	r1
     6e6:	0f 92       	push	r0
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	0f 92       	push	r0
     6ec:	11 24       	eor	r1, r1
     6ee:	cf 92       	push	r12
     6f0:	df 92       	push	r13
     6f2:	ef 92       	push	r14
     6f4:	ff 92       	push	r15
     6f6:	0f 93       	push	r16
     6f8:	1f 93       	push	r17
     6fa:	2f 93       	push	r18
     6fc:	3f 93       	push	r19
     6fe:	4f 93       	push	r20
     700:	5f 93       	push	r21
     702:	6f 93       	push	r22
     704:	7f 93       	push	r23
     706:	8f 93       	push	r24
     708:	9f 93       	push	r25
     70a:	af 93       	push	r26
     70c:	bf 93       	push	r27
     70e:	ef 93       	push	r30
     710:	ff 93       	push	r31
     712:	cf 93       	push	r28
     714:	df 93       	push	r29
     716:	cd b7       	in	r28, 0x3d	; 61
     718:	de b7       	in	r29, 0x3e	; 62
     71a:	6c 97       	sbiw	r28, 0x1c	; 28
     71c:	de bf       	out	0x3e, r29	; 62
     71e:	cd bf       	out	0x3d, r28	; 61
     720:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     724:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     728:	83 ff       	sbrs	r24, 3
     72a:	17 c1       	rjmp	.+558    	; 0x95a <__vector_11+0x276>
     72c:	68 e0       	ldi	r22, 0x08	; 8
     72e:	ce 01       	movw	r24, r28
     730:	45 96       	adiw	r24, 0x15	; 21
     732:	0e 94 31 01 	call	0x262	; 0x262 <_ZL4RecvPVhh>
     736:	82 ef       	ldi	r24, 0xF2	; 242
     738:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     73c:	8d 89       	ldd	r24, Y+21	; 0x15
     73e:	87 ff       	sbrs	r24, 7
     740:	05 c0       	rjmp	.+10     	; 0x74c <__vector_11+0x68>
     742:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     746:	90 ff       	sbrs	r25, 0
     748:	fc cf       	rjmp	.-8      	; 0x742 <__vector_11+0x5e>
     74a:	03 c0       	rjmp	.+6      	; 0x752 <__vector_11+0x6e>
     74c:	9e ef       	ldi	r25, 0xFE	; 254
     74e:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     752:	98 2f       	mov	r25, r24
     754:	90 76       	andi	r25, 0x60	; 96
     756:	09 f0       	breq	.+2      	; 0x75a <__vector_11+0x76>
     758:	d8 c0       	rjmp	.+432    	; 0x90a <__vector_11+0x226>
     75a:	9e 89       	ldd	r25, Y+22	; 0x16
     75c:	4f 89       	ldd	r20, Y+23	; 0x17
     75e:	58 8d       	ldd	r21, Y+24	; 0x18
     760:	2f 89       	ldd	r18, Y+23	; 0x17
     762:	18 8d       	ldd	r17, Y+24	; 0x18
     764:	91 11       	cpse	r25, r1
     766:	0c c0       	rjmp	.+24     	; 0x780 <__vector_11+0x9c>
     768:	80 38       	cpi	r24, 0x80	; 128
     76a:	29 f4       	brne	.+10     	; 0x776 <__vector_11+0x92>
     76c:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <_usbCurrentStatus>
     770:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     774:	02 c0       	rjmp	.+4      	; 0x77a <__vector_11+0x96>
     776:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     77a:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     77e:	e6 c0       	rjmp	.+460    	; 0x94c <__vector_11+0x268>
     780:	91 30       	cpi	r25, 0x01	; 1
     782:	51 f4       	brne	.+20     	; 0x798 <__vector_11+0xb4>
     784:	81 11       	cpse	r24, r1
     786:	e2 c0       	rjmp	.+452    	; 0x94c <__vector_11+0x268>
     788:	41 30       	cpi	r20, 0x01	; 1
     78a:	51 05       	cpc	r21, r1
     78c:	09 f0       	breq	.+2      	; 0x790 <__vector_11+0xac>
     78e:	de c0       	rjmp	.+444    	; 0x94c <__vector_11+0x268>
     790:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <_usbCurrentStatus>
     794:	8d 7f       	andi	r24, 0xFD	; 253
     796:	0b c0       	rjmp	.+22     	; 0x7ae <__vector_11+0xca>
     798:	93 30       	cpi	r25, 0x03	; 3
     79a:	61 f4       	brne	.+24     	; 0x7b4 <__vector_11+0xd0>
     79c:	81 11       	cpse	r24, r1
     79e:	d6 c0       	rjmp	.+428    	; 0x94c <__vector_11+0x268>
     7a0:	41 30       	cpi	r20, 0x01	; 1
     7a2:	51 05       	cpc	r21, r1
     7a4:	09 f0       	breq	.+2      	; 0x7a8 <__vector_11+0xc4>
     7a6:	d2 c0       	rjmp	.+420    	; 0x94c <__vector_11+0x268>
     7a8:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <_usbCurrentStatus>
     7ac:	82 60       	ori	r24, 0x02	; 2
     7ae:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <_usbCurrentStatus>
     7b2:	cc c0       	rjmp	.+408    	; 0x94c <__vector_11+0x268>
     7b4:	95 30       	cpi	r25, 0x05	; 5
     7b6:	49 f4       	brne	.+18     	; 0x7ca <__vector_11+0xe6>
     7b8:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     7bc:	80 ff       	sbrs	r24, 0
     7be:	fc cf       	rjmp	.-8      	; 0x7b8 <__vector_11+0xd4>
     7c0:	82 2f       	mov	r24, r18
     7c2:	80 68       	ori	r24, 0x80	; 128
     7c4:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     7c8:	c1 c0       	rjmp	.+386    	; 0x94c <__vector_11+0x268>
     7ca:	96 30       	cpi	r25, 0x06	; 6
     7cc:	09 f0       	breq	.+2      	; 0x7d0 <__vector_11+0xec>
     7ce:	70 c0       	rjmp	.+224    	; 0x8b0 <__vector_11+0x1cc>
     7d0:	eb 8c       	ldd	r14, Y+27	; 0x1b
     7d2:	fc 8c       	ldd	r15, Y+28	; 0x1c
     7d4:	12 30       	cpi	r17, 0x02	; 2
     7d6:	69 f5       	brne	.+90     	; 0x832 <__vector_11+0x14e>
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	0e 94 0d 03 	call	0x61a	; 0x61a <_Z11InitControli>
     7e0:	0e 94 c4 01 	call	0x388	; 0x388 <_ZL14SendInterfacesv>
     7e4:	99 e0       	ldi	r25, 0x09	; 9
     7e6:	9e 01       	movw	r18, r28
     7e8:	2f 5f       	subi	r18, 0xFF	; 255
     7ea:	3f 4f       	sbci	r19, 0xFF	; 255
     7ec:	69 01       	movw	r12, r18
     7ee:	f9 01       	movw	r30, r18
     7f0:	29 2f       	mov	r18, r25
     7f2:	11 92       	st	Z+, r1
     7f4:	2a 95       	dec	r18
     7f6:	e9 f7       	brne	.-6      	; 0x7f2 <__vector_11+0x10e>
     7f8:	99 83       	std	Y+1, r25	; 0x01
     7fa:	1a 83       	std	Y+2, r17	; 0x02
     7fc:	91 e0       	ldi	r25, 0x01	; 1
     7fe:	9e 83       	std	Y+6, r25	; 0x06
     800:	90 ea       	ldi	r25, 0xA0	; 160
     802:	98 87       	std	Y+8, r25	; 0x08
     804:	9a ef       	ldi	r25, 0xFA	; 250
     806:	99 87       	std	Y+9, r25	; 0x09
     808:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <_ZL6_cmark>
     80c:	30 91 2a 01 	lds	r19, 0x012A	; 0x80012a <_ZL6_cmark+0x1>
     810:	27 5f       	subi	r18, 0xF7	; 247
     812:	3f 4f       	sbci	r19, 0xFF	; 255
     814:	3c 83       	std	Y+4, r19	; 0x04
     816:	2b 83       	std	Y+3, r18	; 0x03
     818:	8d 83       	std	Y+5, r24	; 0x05
     81a:	c7 01       	movw	r24, r14
     81c:	0e 94 0d 03 	call	0x61a	; 0x61a <_Z11InitControli>
     820:	49 e0       	ldi	r20, 0x09	; 9
     822:	50 e0       	ldi	r21, 0x00	; 0
     824:	b6 01       	movw	r22, r12
     826:	80 e0       	ldi	r24, 0x00	; 0
     828:	0e 94 18 03 	call	0x630	; 0x630 <_Z15USB_SendControlhPKvi>
     82c:	0e 94 c4 01 	call	0x388	; 0x388 <_ZL14SendInterfacesv>
     830:	8d c0       	rjmp	.+282    	; 0x94c <__vector_11+0x268>
     832:	c7 01       	movw	r24, r14
     834:	0e 94 0d 03 	call	0x61a	; 0x61a <_Z11InitControli>
     838:	0e 94 a7 08 	call	0x114e	; 0x114e <_Z12PluggableUSBv>
     83c:	be 01       	movw	r22, r28
     83e:	6b 5e       	subi	r22, 0xEB	; 235
     840:	7f 4f       	sbci	r23, 0xFF	; 255
     842:	0e 94 4b 08 	call	0x1096	; 0x1096 <_ZN13PluggableUSB_13getDescriptorER8USBSetup>
     846:	00 97       	sbiw	r24, 0x00	; 0
     848:	19 f0       	breq	.+6      	; 0x850 <__vector_11+0x16c>
     84a:	0c f0       	brlt	.+2      	; 0x84e <__vector_11+0x16a>
     84c:	7f c0       	rjmp	.+254    	; 0x94c <__vector_11+0x268>
     84e:	82 c0       	rjmp	.+260    	; 0x954 <__vector_11+0x270>
     850:	11 30       	cpi	r17, 0x01	; 1
     852:	09 f4       	brne	.+2      	; 0x856 <__vector_11+0x172>
     854:	70 c0       	rjmp	.+224    	; 0x936 <__vector_11+0x252>
     856:	13 30       	cpi	r17, 0x03	; 3
     858:	09 f0       	breq	.+2      	; 0x85c <__vector_11+0x178>
     85a:	7c c0       	rjmp	.+248    	; 0x954 <__vector_11+0x270>
     85c:	8f 89       	ldd	r24, Y+23	; 0x17
     85e:	88 23       	and	r24, r24
     860:	09 f4       	brne	.+2      	; 0x864 <__vector_11+0x180>
     862:	6c c0       	rjmp	.+216    	; 0x93c <__vector_11+0x258>
     864:	82 30       	cpi	r24, 0x02	; 2
     866:	29 f4       	brne	.+10     	; 0x872 <__vector_11+0x18e>
     868:	40 e8       	ldi	r20, 0x80	; 128
     86a:	6b e0       	ldi	r22, 0x0B	; 11
     86c:	88 ee       	ldi	r24, 0xE8	; 232
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	06 c0       	rjmp	.+12     	; 0x87e <__vector_11+0x19a>
     872:	81 30       	cpi	r24, 0x01	; 1
     874:	39 f4       	brne	.+14     	; 0x884 <__vector_11+0x1a0>
     876:	40 e8       	ldi	r20, 0x80	; 128
     878:	6b e0       	ldi	r22, 0x0B	; 11
     87a:	8c ed       	ldi	r24, 0xDC	; 220
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <_ZL24USB_SendStringDescriptorPKhhh>
     882:	56 c0       	rjmp	.+172    	; 0x930 <__vector_11+0x24c>
     884:	83 30       	cpi	r24, 0x03	; 3
     886:	09 f0       	breq	.+2      	; 0x88a <__vector_11+0x1a6>
     888:	65 c0       	rjmp	.+202    	; 0x954 <__vector_11+0x270>
     88a:	0e 94 a7 08 	call	0x114e	; 0x114e <_Z12PluggableUSBv>
     88e:	8e 01       	movw	r16, r28
     890:	0f 5f       	subi	r16, 0xFF	; 255
     892:	1f 4f       	sbci	r17, 0xFF	; 255
     894:	b8 01       	movw	r22, r16
     896:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <_ZN13PluggableUSB_12getShortNameEPc>
     89a:	f8 01       	movw	r30, r16
     89c:	01 90       	ld	r0, Z+
     89e:	00 20       	and	r0, r0
     8a0:	e9 f7       	brne	.-6      	; 0x89c <__vector_11+0x1b8>
     8a2:	31 97       	sbiw	r30, 0x01	; 1
     8a4:	bf 01       	movw	r22, r30
     8a6:	60 1b       	sub	r22, r16
     8a8:	71 0b       	sbc	r23, r17
     8aa:	40 e0       	ldi	r20, 0x00	; 0
     8ac:	c8 01       	movw	r24, r16
     8ae:	e7 cf       	rjmp	.-50     	; 0x87e <__vector_11+0x19a>
     8b0:	97 30       	cpi	r25, 0x07	; 7
     8b2:	09 f4       	brne	.+2      	; 0x8b6 <__vector_11+0x1d2>
     8b4:	4f c0       	rjmp	.+158    	; 0x954 <__vector_11+0x270>
     8b6:	98 30       	cpi	r25, 0x08	; 8
     8b8:	21 f4       	brne	.+8      	; 0x8c2 <__vector_11+0x1de>
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     8c0:	45 c0       	rjmp	.+138    	; 0x94c <__vector_11+0x268>
     8c2:	99 30       	cpi	r25, 0x09	; 9
     8c4:	09 f0       	breq	.+2      	; 0x8c8 <__vector_11+0x1e4>
     8c6:	42 c0       	rjmp	.+132    	; 0x94c <__vector_11+0x268>
     8c8:	83 70       	andi	r24, 0x03	; 3
     8ca:	09 f0       	breq	.+2      	; 0x8ce <__vector_11+0x1ea>
     8cc:	43 c0       	rjmp	.+134    	; 0x954 <__vector_11+0x270>
     8ce:	e1 e0       	ldi	r30, 0x01	; 1
     8d0:	f1 e0       	ldi	r31, 0x01	; 1
     8d2:	81 e0       	ldi	r24, 0x01	; 1
     8d4:	31 e0       	ldi	r19, 0x01	; 1
     8d6:	96 e3       	ldi	r25, 0x36	; 54
     8d8:	20 81       	ld	r18, Z
     8da:	21 11       	cpse	r18, r1
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__vector_11+0x20c>
     8de:	8e e7       	ldi	r24, 0x7E	; 126
     8e0:	80 93 ea 00 	sts	0x00EA, r24	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>
     8e4:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>
     8e8:	8f 89       	ldd	r24, Y+23	; 0x17
     8ea:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <_usbConfiguration>
     8ee:	2e c0       	rjmp	.+92     	; 0x94c <__vector_11+0x268>
     8f0:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     8f4:	30 93 eb 00 	sts	0x00EB, r19	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     8f8:	21 91       	ld	r18, Z+
     8fa:	20 93 ec 00 	sts	0x00EC, r18	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     8fe:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     902:	8f 5f       	subi	r24, 0xFF	; 255
     904:	87 30       	cpi	r24, 0x07	; 7
     906:	41 f7       	brne	.-48     	; 0x8d8 <__vector_11+0x1f4>
     908:	ea cf       	rjmp	.-44     	; 0x8de <__vector_11+0x1fa>
     90a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     90c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     90e:	0e 94 0d 03 	call	0x61a	; 0x61a <_Z11InitControli>
     912:	89 8d       	ldd	r24, Y+25	; 0x19
     914:	81 11       	cpse	r24, r1
     916:	05 c0       	rjmp	.+10     	; 0x922 <__vector_11+0x23e>
     918:	ce 01       	movw	r24, r28
     91a:	45 96       	adiw	r24, 0x15	; 21
     91c:	0e 94 8a 07 	call	0xf14	; 0xf14 <_Z9CDC_SetupR8USBSetup>
     920:	07 c0       	rjmp	.+14     	; 0x930 <__vector_11+0x24c>
     922:	0e 94 a7 08 	call	0x114e	; 0x114e <_Z12PluggableUSBv>
     926:	be 01       	movw	r22, r28
     928:	6b 5e       	subi	r22, 0xEB	; 235
     92a:	7f 4f       	sbci	r23, 0xFF	; 255
     92c:	0e 94 89 08 	call	0x1112	; 0x1112 <_ZN13PluggableUSB_5setupER8USBSetup>
     930:	88 23       	and	r24, r24
     932:	81 f0       	breq	.+32     	; 0x954 <__vector_11+0x270>
     934:	0b c0       	rjmp	.+22     	; 0x94c <__vector_11+0x268>
     936:	6a ec       	ldi	r22, 0xCA	; 202
     938:	70 e0       	ldi	r23, 0x00	; 0
     93a:	02 c0       	rjmp	.+4      	; 0x940 <__vector_11+0x25c>
     93c:	64 ef       	ldi	r22, 0xF4	; 244
     93e:	70 e0       	ldi	r23, 0x00	; 0
     940:	fb 01       	movw	r30, r22
     942:	44 91       	lpm	r20, Z
     944:	50 e0       	ldi	r21, 0x00	; 0
     946:	80 e8       	ldi	r24, 0x80	; 128
     948:	0e 94 18 03 	call	0x630	; 0x630 <_Z15USB_SendControlhPKvi>
     94c:	8e ef       	ldi	r24, 0xFE	; 254
     94e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     952:	03 c0       	rjmp	.+6      	; 0x95a <__vector_11+0x276>
     954:	81 e2       	ldi	r24, 0x21	; 33
     956:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     95a:	6c 96       	adiw	r28, 0x1c	; 28
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	f8 94       	cli
     960:	de bf       	out	0x3e, r29	; 62
     962:	0f be       	out	0x3f, r0	; 63
     964:	cd bf       	out	0x3d, r28	; 61
     966:	df 91       	pop	r29
     968:	cf 91       	pop	r28
     96a:	ff 91       	pop	r31
     96c:	ef 91       	pop	r30
     96e:	bf 91       	pop	r27
     970:	af 91       	pop	r26
     972:	9f 91       	pop	r25
     974:	8f 91       	pop	r24
     976:	7f 91       	pop	r23
     978:	6f 91       	pop	r22
     97a:	5f 91       	pop	r21
     97c:	4f 91       	pop	r20
     97e:	3f 91       	pop	r19
     980:	2f 91       	pop	r18
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	ff 90       	pop	r15
     988:	ef 90       	pop	r14
     98a:	df 90       	pop	r13
     98c:	cf 90       	pop	r12
     98e:	0f 90       	pop	r0
     990:	0f be       	out	0x3f, r0	; 63
     992:	0f 90       	pop	r0
     994:	1f 90       	pop	r1
     996:	18 95       	reti

00000998 <_Z9USB_Flushh>:
     998:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     99c:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     9a0:	88 23       	and	r24, r24
     9a2:	19 f0       	breq	.+6      	; 0x9aa <_Z9USB_Flushh+0x12>
     9a4:	8a e3       	ldi	r24, 0x3A	; 58
     9a6:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     9aa:	08 95       	ret

000009ac <__vector_10>:
     9ac:	1f 92       	push	r1
     9ae:	0f 92       	push	r0
     9b0:	0f b6       	in	r0, 0x3f	; 63
     9b2:	0f 92       	push	r0
     9b4:	11 24       	eor	r1, r1
     9b6:	2f 93       	push	r18
     9b8:	3f 93       	push	r19
     9ba:	4f 93       	push	r20
     9bc:	5f 93       	push	r21
     9be:	6f 93       	push	r22
     9c0:	7f 93       	push	r23
     9c2:	8f 93       	push	r24
     9c4:	9f 93       	push	r25
     9c6:	af 93       	push	r26
     9c8:	bf 93       	push	r27
     9ca:	cf 93       	push	r28
     9cc:	ef 93       	push	r30
     9ce:	ff 93       	push	r31
     9d0:	c0 91 e1 00 	lds	r28, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
     9d4:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
     9d8:	83 7f       	andi	r24, 0xF3	; 243
     9da:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
     9de:	c3 ff       	sbrs	r28, 3
     9e0:	0f c0       	rjmp	.+30     	; 0xa00 <__vector_10+0x54>
     9e2:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     9e6:	81 e0       	ldi	r24, 0x01	; 1
     9e8:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     9ec:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     9f0:	82 e3       	ldi	r24, 0x32	; 50
     9f2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     9f6:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <_usbConfiguration>
     9fa:	88 e0       	ldi	r24, 0x08	; 8
     9fc:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     a00:	c2 ff       	sbrs	r28, 2
     a02:	19 c0       	rjmp	.+50     	; 0xa36 <__vector_10+0x8a>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	0e 94 cc 04 	call	0x998	; 0x998 <_Z9USB_Flushh>
     a0a:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <TxLEDPulse>
     a0e:	88 23       	and	r24, r24
     a10:	39 f0       	breq	.+14     	; 0xa20 <__vector_10+0x74>
     a12:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <TxLEDPulse>
     a16:	81 50       	subi	r24, 0x01	; 1
     a18:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <TxLEDPulse>
     a1c:	88 23       	and	r24, r24
     a1e:	89 f1       	breq	.+98     	; 0xa82 <__vector_10+0xd6>
     a20:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <RxLEDPulse>
     a24:	88 23       	and	r24, r24
     a26:	39 f0       	breq	.+14     	; 0xa36 <__vector_10+0x8a>
     a28:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <RxLEDPulse>
     a2c:	81 50       	subi	r24, 0x01	; 1
     a2e:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <RxLEDPulse>
     a32:	88 23       	and	r24, r24
     a34:	41 f1       	breq	.+80     	; 0xa86 <__vector_10+0xda>
     a36:	c4 ff       	sbrs	r28, 4
     a38:	10 c0       	rjmp	.+32     	; 0xa5a <__vector_10+0xae>
     a3a:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     a3e:	8e 7e       	andi	r24, 0xEE	; 238
     a40:	81 60       	ori	r24, 0x01	; 1
     a42:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     a46:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
     a4a:	8f 7e       	andi	r24, 0xEF	; 239
     a4c:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
     a50:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <_usbSuspendState>
     a54:	8e 7e       	andi	r24, 0xEE	; 238
     a56:	80 61       	ori	r24, 0x10	; 16
     a58:	11 c0       	rjmp	.+34     	; 0xa7c <__vector_10+0xd0>
     a5a:	c0 ff       	sbrs	r28, 0
     a5c:	16 c0       	rjmp	.+44     	; 0xa8a <__vector_10+0xde>
     a5e:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     a62:	8e 7e       	andi	r24, 0xEE	; 238
     a64:	80 61       	ori	r24, 0x10	; 16
     a66:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     a6a:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
     a6e:	8e 7e       	andi	r24, 0xEE	; 238
     a70:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
     a74:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <_usbSuspendState>
     a78:	8e 7e       	andi	r24, 0xEE	; 238
     a7a:	81 60       	ori	r24, 0x01	; 1
     a7c:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <_usbSuspendState>
     a80:	04 c0       	rjmp	.+8      	; 0xa8a <__vector_10+0xde>
     a82:	5d 9a       	sbi	0x0b, 5	; 11
     a84:	cd cf       	rjmp	.-102    	; 0xa20 <__vector_10+0x74>
     a86:	28 9a       	sbi	0x05, 0	; 5
     a88:	d6 cf       	rjmp	.-84     	; 0xa36 <__vector_10+0x8a>
     a8a:	ff 91       	pop	r31
     a8c:	ef 91       	pop	r30
     a8e:	cf 91       	pop	r28
     a90:	bf 91       	pop	r27
     a92:	af 91       	pop	r26
     a94:	9f 91       	pop	r25
     a96:	8f 91       	pop	r24
     a98:	7f 91       	pop	r23
     a9a:	6f 91       	pop	r22
     a9c:	5f 91       	pop	r21
     a9e:	4f 91       	pop	r20
     aa0:	3f 91       	pop	r19
     aa2:	2f 91       	pop	r18
     aa4:	0f 90       	pop	r0
     aa6:	0f be       	out	0x3f, r0	; 63
     aa8:	0f 90       	pop	r0
     aaa:	1f 90       	pop	r1
     aac:	18 95       	reti

00000aae <_ZN10USBDevice_6attachEv>:
{
}

void USBDevice_::attach()
{
	_usbConfiguration = 0;
     aae:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <_usbConfiguration>
	_usbCurrentStatus = 0;
     ab2:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <_usbCurrentStatus>
	_usbSuspendState = 0;
     ab6:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <_usbSuspendState>
	USB_ClockEnable();
     aba:	0e 94 a1 01 	call	0x342	; 0x342 <_ZL15USB_ClockEnablev>

	UDINT &= ~((1<<WAKEUPI) | (1<<SUSPI)); // clear already pending WAKEUP / SUSPEND requests
     abe:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
     ac2:	8e 7e       	andi	r24, 0xEE	; 238
     ac4:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
	UDIEN = (1<<EORSTE) | (1<<SOFE) | (1<<SUSPE);	// Enable interrupts for EOR (End of Reset), SOF (start of frame) and SUSPEND
     ac8:	8d e0       	ldi	r24, 0x0D	; 13
     aca:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
	
	TX_RX_LED_INIT;
     ace:	55 9a       	sbi	0x0a, 5	; 10
     ad0:	20 9a       	sbi	0x04, 0	; 4

#if MAGIC_KEY_POS != (RAMEND-1)
	if (pgm_read_word(FLASHEND - 1) == NEW_LUFA_SIGNATURE) {
     ad2:	ee ef       	ldi	r30, 0xFE	; 254
     ad4:	ff e7       	ldi	r31, 0x7F	; 127
     ad6:	85 91       	lpm	r24, Z+
     ad8:	94 91       	lpm	r25, Z
     ada:	8b 3f       	cpi	r24, 0xFB	; 251
     adc:	9c 4d       	sbci	r25, 0xDC	; 220
     ade:	19 f4       	brne	.+6      	; 0xae6 <_ZN10USBDevice_6attachEv+0x38>
		_updatedLUFAbootloader = true;
     ae0:	81 e0       	ldi	r24, 0x01	; 1
     ae2:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <_updatedLUFAbootloader>
     ae6:	08 95       	ret

00000ae8 <__vector_23>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
     ae8:	1f 92       	push	r1
     aea:	0f 92       	push	r0
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	0f 92       	push	r0
     af0:	11 24       	eor	r1, r1
     af2:	2f 93       	push	r18
     af4:	3f 93       	push	r19
     af6:	8f 93       	push	r24
     af8:	9f 93       	push	r25
     afa:	af 93       	push	r26
     afc:	bf 93       	push	r27
     afe:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <timer0_millis>
     b02:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <timer0_millis+0x1>
     b06:	a0 91 33 01 	lds	r26, 0x0133	; 0x800133 <timer0_millis+0x2>
     b0a:	b0 91 34 01 	lds	r27, 0x0134	; 0x800134 <timer0_millis+0x3>
     b0e:	30 91 30 01 	lds	r19, 0x0130	; 0x800130 <timer0_fract>
     b12:	23 e0       	ldi	r18, 0x03	; 3
     b14:	23 0f       	add	r18, r19
     b16:	2d 37       	cpi	r18, 0x7D	; 125
     b18:	20 f4       	brcc	.+8      	; 0xb22 <__stack+0x23>
     b1a:	01 96       	adiw	r24, 0x01	; 1
     b1c:	a1 1d       	adc	r26, r1
     b1e:	b1 1d       	adc	r27, r1
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__stack+0x2d>
     b22:	26 e8       	ldi	r18, 0x86	; 134
     b24:	23 0f       	add	r18, r19
     b26:	02 96       	adiw	r24, 0x02	; 2
     b28:	a1 1d       	adc	r26, r1
     b2a:	b1 1d       	adc	r27, r1
     b2c:	20 93 30 01 	sts	0x0130, r18	; 0x800130 <timer0_fract>
     b30:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <timer0_millis>
     b34:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <timer0_millis+0x1>
     b38:	a0 93 33 01 	sts	0x0133, r26	; 0x800133 <timer0_millis+0x2>
     b3c:	b0 93 34 01 	sts	0x0134, r27	; 0x800134 <timer0_millis+0x3>
     b40:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <timer0_overflow_count>
     b44:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <timer0_overflow_count+0x1>
     b48:	a0 91 37 01 	lds	r26, 0x0137	; 0x800137 <timer0_overflow_count+0x2>
     b4c:	b0 91 38 01 	lds	r27, 0x0138	; 0x800138 <timer0_overflow_count+0x3>
     b50:	01 96       	adiw	r24, 0x01	; 1
     b52:	a1 1d       	adc	r26, r1
     b54:	b1 1d       	adc	r27, r1
     b56:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <timer0_overflow_count>
     b5a:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <timer0_overflow_count+0x1>
     b5e:	a0 93 37 01 	sts	0x0137, r26	; 0x800137 <timer0_overflow_count+0x2>
     b62:	b0 93 38 01 	sts	0x0138, r27	; 0x800138 <timer0_overflow_count+0x3>
     b66:	bf 91       	pop	r27
     b68:	af 91       	pop	r26
     b6a:	9f 91       	pop	r25
     b6c:	8f 91       	pop	r24
     b6e:	3f 91       	pop	r19
     b70:	2f 91       	pop	r18
     b72:	0f 90       	pop	r0
     b74:	0f be       	out	0x3f, r0	; 63
     b76:	0f 90       	pop	r0
     b78:	1f 90       	pop	r1
     b7a:	18 95       	reti

00000b7c <micros>:
     b7c:	3f b7       	in	r19, 0x3f	; 63
     b7e:	f8 94       	cli
     b80:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <timer0_overflow_count>
     b84:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <timer0_overflow_count+0x1>
     b88:	a0 91 37 01 	lds	r26, 0x0137	; 0x800137 <timer0_overflow_count+0x2>
     b8c:	b0 91 38 01 	lds	r27, 0x0138	; 0x800138 <timer0_overflow_count+0x3>
     b90:	26 b5       	in	r18, 0x26	; 38
     b92:	a8 9b       	sbis	0x15, 0	; 21
     b94:	05 c0       	rjmp	.+10     	; 0xba0 <micros+0x24>
     b96:	2f 3f       	cpi	r18, 0xFF	; 255
     b98:	19 f0       	breq	.+6      	; 0xba0 <micros+0x24>
     b9a:	01 96       	adiw	r24, 0x01	; 1
     b9c:	a1 1d       	adc	r26, r1
     b9e:	b1 1d       	adc	r27, r1
     ba0:	3f bf       	out	0x3f, r19	; 63
     ba2:	ba 2f       	mov	r27, r26
     ba4:	a9 2f       	mov	r26, r25
     ba6:	98 2f       	mov	r25, r24
     ba8:	88 27       	eor	r24, r24
     baa:	82 0f       	add	r24, r18
     bac:	91 1d       	adc	r25, r1
     bae:	a1 1d       	adc	r26, r1
     bb0:	b1 1d       	adc	r27, r1
     bb2:	bc 01       	movw	r22, r24
     bb4:	cd 01       	movw	r24, r26
     bb6:	42 e0       	ldi	r20, 0x02	; 2
     bb8:	66 0f       	add	r22, r22
     bba:	77 1f       	adc	r23, r23
     bbc:	88 1f       	adc	r24, r24
     bbe:	99 1f       	adc	r25, r25
     bc0:	4a 95       	dec	r20
     bc2:	d1 f7       	brne	.-12     	; 0xbb8 <micros+0x3c>
     bc4:	08 95       	ret

00000bc6 <delay>:
     bc6:	8f 92       	push	r8
     bc8:	9f 92       	push	r9
     bca:	af 92       	push	r10
     bcc:	bf 92       	push	r11
     bce:	cf 92       	push	r12
     bd0:	df 92       	push	r13
     bd2:	ef 92       	push	r14
     bd4:	ff 92       	push	r15
     bd6:	6b 01       	movw	r12, r22
     bd8:	7c 01       	movw	r14, r24
     bda:	0e 94 be 05 	call	0xb7c	; 0xb7c <micros>
     bde:	4b 01       	movw	r8, r22
     be0:	5c 01       	movw	r10, r24
     be2:	c1 14       	cp	r12, r1
     be4:	d1 04       	cpc	r13, r1
     be6:	e1 04       	cpc	r14, r1
     be8:	f1 04       	cpc	r15, r1
     bea:	01 f1       	breq	.+64     	; 0xc2c <delay+0x66>
     bec:	0e 94 21 08 	call	0x1042	; 0x1042 <yield>
     bf0:	0e 94 be 05 	call	0xb7c	; 0xb7c <micros>
     bf4:	dc 01       	movw	r26, r24
     bf6:	cb 01       	movw	r24, r22
     bf8:	88 19       	sub	r24, r8
     bfa:	99 09       	sbc	r25, r9
     bfc:	aa 09       	sbc	r26, r10
     bfe:	bb 09       	sbc	r27, r11
     c00:	88 3e       	cpi	r24, 0xE8	; 232
     c02:	93 40       	sbci	r25, 0x03	; 3
     c04:	a1 05       	cpc	r26, r1
     c06:	b1 05       	cpc	r27, r1
     c08:	60 f3       	brcs	.-40     	; 0xbe2 <delay+0x1c>
     c0a:	21 e0       	ldi	r18, 0x01	; 1
     c0c:	c2 1a       	sub	r12, r18
     c0e:	d1 08       	sbc	r13, r1
     c10:	e1 08       	sbc	r14, r1
     c12:	f1 08       	sbc	r15, r1
     c14:	88 ee       	ldi	r24, 0xE8	; 232
     c16:	88 0e       	add	r8, r24
     c18:	83 e0       	ldi	r24, 0x03	; 3
     c1a:	98 1e       	adc	r9, r24
     c1c:	a1 1c       	adc	r10, r1
     c1e:	b1 1c       	adc	r11, r1
     c20:	c1 14       	cp	r12, r1
     c22:	d1 04       	cpc	r13, r1
     c24:	e1 04       	cpc	r14, r1
     c26:	f1 04       	cpc	r15, r1
     c28:	19 f7       	brne	.-58     	; 0xbf0 <delay+0x2a>
     c2a:	db cf       	rjmp	.-74     	; 0xbe2 <delay+0x1c>
     c2c:	ff 90       	pop	r15
     c2e:	ef 90       	pop	r14
     c30:	df 90       	pop	r13
     c32:	cf 90       	pop	r12
     c34:	bf 90       	pop	r11
     c36:	af 90       	pop	r10
     c38:	9f 90       	pop	r9
     c3a:	8f 90       	pop	r8
     c3c:	08 95       	ret

00000c3e <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
     c3e:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
     c40:	84 b5       	in	r24, 0x24	; 36
     c42:	82 60       	ori	r24, 0x02	; 2
     c44:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
     c46:	84 b5       	in	r24, 0x24	; 36
     c48:	81 60       	ori	r24, 0x01	; 1
     c4a:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
     c4c:	85 b5       	in	r24, 0x25	; 37
     c4e:	82 60       	ori	r24, 0x02	; 2
     c50:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
     c52:	85 b5       	in	r24, 0x25	; 37
     c54:	81 60       	ori	r24, 0x01	; 1
     c56:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
     c58:	ee e6       	ldi	r30, 0x6E	; 110
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	80 81       	ld	r24, Z
     c5e:	81 60       	ori	r24, 0x01	; 1
     c60:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
     c62:	e1 e8       	ldi	r30, 0x81	; 129
     c64:	f0 e0       	ldi	r31, 0x00	; 0
     c66:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
     c68:	80 81       	ld	r24, Z
     c6a:	82 60       	ori	r24, 0x02	; 2
     c6c:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
     c6e:	80 81       	ld	r24, Z
     c70:	81 60       	ori	r24, 0x01	; 1
     c72:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
     c74:	e0 e8       	ldi	r30, 0x80	; 128
     c76:	f0 e0       	ldi	r31, 0x00	; 0
     c78:	80 81       	ld	r24, Z
     c7a:	81 60       	ori	r24, 0x01	; 1
     c7c:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
     c7e:	e1 e9       	ldi	r30, 0x91	; 145
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	80 81       	ld	r24, Z
     c84:	82 60       	ori	r24, 0x02	; 2
     c86:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
     c88:	80 81       	ld	r24, Z
     c8a:	81 60       	ori	r24, 0x01	; 1
     c8c:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
     c8e:	e0 e9       	ldi	r30, 0x90	; 144
     c90:	f0 e0       	ldi	r31, 0x00	; 0
     c92:	80 81       	ld	r24, Z
     c94:	81 60       	ori	r24, 0x01	; 1
     c96:	80 83       	st	Z, r24
#endif

#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */
	sbi(TCCR4B, CS42);		// set timer4 prescale factor to 64
     c98:	e1 ec       	ldi	r30, 0xC1	; 193
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	80 81       	ld	r24, Z
     c9e:	84 60       	ori	r24, 0x04	; 4
     ca0:	80 83       	st	Z, r24
	sbi(TCCR4B, CS41);
     ca2:	80 81       	ld	r24, Z
     ca4:	82 60       	ori	r24, 0x02	; 2
     ca6:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
     ca8:	80 81       	ld	r24, Z
     caa:	81 60       	ori	r24, 0x01	; 1
     cac:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
     cae:	e3 ec       	ldi	r30, 0xC3	; 195
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	80 81       	ld	r24, Z
     cb4:	81 60       	ori	r24, 0x01	; 1
     cb6:	80 83       	st	Z, r24
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
     cb8:	e0 ec       	ldi	r30, 0xC0	; 192
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	80 81       	ld	r24, Z
     cbe:	82 60       	ori	r24, 0x02	; 2
     cc0:	80 83       	st	Z, r24
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
     cc2:	e2 ec       	ldi	r30, 0xC2	; 194
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	81 60       	ori	r24, 0x01	; 1
     cca:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
     ccc:	ea e7       	ldi	r30, 0x7A	; 122
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	80 81       	ld	r24, Z
     cd2:	84 60       	ori	r24, 0x04	; 4
     cd4:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
     cd6:	80 81       	ld	r24, Z
     cd8:	82 60       	ori	r24, 0x02	; 2
     cda:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
     cdc:	80 81       	ld	r24, Z
     cde:	81 60       	ori	r24, 0x01	; 1
     ce0:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
     ce2:	80 81       	ld	r24, Z
     ce4:	80 68       	ori	r24, 0x80	; 128
     ce6:	80 83       	st	Z, r24
     ce8:	08 95       	ret

00000cea <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	fc 01       	movw	r30, r24
     cee:	31 97       	sbiw	r30, 0x01	; 1
     cf0:	ef 30       	cpi	r30, 0x0F	; 15
     cf2:	f1 05       	cpc	r31, r1
     cf4:	b0 f5       	brcc	.+108    	; 0xd62 <turnOffPWM+0x78>
     cf6:	ea 5a       	subi	r30, 0xAA	; 170
     cf8:	ff 4f       	sbci	r31, 0xFF	; 255
     cfa:	0c 94 bb 08 	jmp	0x1176	; 0x1176 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
     cfe:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     d02:	8f 77       	andi	r24, 0x7F	; 127
     d04:	03 c0       	rjmp	.+6      	; 0xd0c <turnOffPWM+0x22>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
     d06:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     d0a:	8f 7d       	andi	r24, 0xDF	; 223
     d0c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     d10:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
     d12:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     d16:	87 7f       	andi	r24, 0xF7	; 247
     d18:	f9 cf       	rjmp	.-14     	; 0xd0c <turnOffPWM+0x22>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
     d1a:	84 b5       	in	r24, 0x24	; 36
     d1c:	8f 77       	andi	r24, 0x7F	; 127
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
     d20:	84 b5       	in	r24, 0x24	; 36
     d22:	8f 7d       	andi	r24, 0xDF	; 223
     d24:	84 bd       	out	0x24, r24	; 36
     d26:	08 95       	ret
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
     d28:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     d2c:	8f 77       	andi	r24, 0x7F	; 127
     d2e:	07 c0       	rjmp	.+14     	; 0xd3e <turnOffPWM+0x54>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
     d30:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     d34:	8f 7d       	andi	r24, 0xDF	; 223
     d36:	03 c0       	rjmp	.+6      	; 0xd3e <turnOffPWM+0x54>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
     d38:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     d3c:	87 7f       	andi	r24, 0xF7	; 247
     d3e:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     d42:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
     d44:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     d48:	8f 77       	andi	r24, 0x7F	; 127
     d4a:	03 c0       	rjmp	.+6      	; 0xd52 <turnOffPWM+0x68>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
     d4c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     d50:	8f 7d       	andi	r24, 0xDF	; 223
     d52:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     d56:	08 95       	ret
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
		#endif			
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
     d58:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     d5c:	87 7f       	andi	r24, 0xF7	; 247
     d5e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     d62:	08 95       	ret

00000d64 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
     d64:	cf 93       	push	r28
     d66:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	fc 01       	movw	r30, r24
     d6c:	e9 5e       	subi	r30, 0xE9	; 233
     d6e:	fe 4f       	sbci	r31, 0xFE	; 254
     d70:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
     d72:	fc 01       	movw	r30, r24
     d74:	ea 5c       	subi	r30, 0xCA	; 202
     d76:	fe 4f       	sbci	r31, 0xFE	; 254
     d78:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
     d7a:	88 23       	and	r24, r24
     d7c:	61 f1       	breq	.+88     	; 0xdd6 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	88 0f       	add	r24, r24
     d82:	99 1f       	adc	r25, r25
     d84:	fc 01       	movw	r30, r24
     d86:	ed 59       	subi	r30, 0x9D	; 157
     d88:	fe 4f       	sbci	r31, 0xFE	; 254
     d8a:	c5 91       	lpm	r28, Z+
     d8c:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
     d8e:	fc 01       	movw	r30, r24
     d90:	eb 5a       	subi	r30, 0xAB	; 171
     d92:	fe 4f       	sbci	r31, 0xFE	; 254
     d94:	a5 91       	lpm	r26, Z+
     d96:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
     d98:	61 11       	cpse	r22, r1
     d9a:	09 c0       	rjmp	.+18     	; 0xdae <pinMode+0x4a>
		uint8_t oldSREG = SREG;
     d9c:	9f b7       	in	r25, 0x3f	; 63
                cli();
     d9e:	f8 94       	cli
		*reg &= ~bit;
     da0:	88 81       	ld	r24, Y
     da2:	20 95       	com	r18
     da4:	82 23       	and	r24, r18
     da6:	88 83       	st	Y, r24
		*out &= ~bit;
     da8:	ec 91       	ld	r30, X
     daa:	2e 23       	and	r18, r30
     dac:	0b c0       	rjmp	.+22     	; 0xdc4 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
     dae:	62 30       	cpi	r22, 0x02	; 2
     db0:	61 f4       	brne	.+24     	; 0xdca <pinMode+0x66>
		uint8_t oldSREG = SREG;
     db2:	9f b7       	in	r25, 0x3f	; 63
                cli();
     db4:	f8 94       	cli
		*reg &= ~bit;
     db6:	88 81       	ld	r24, Y
     db8:	32 2f       	mov	r19, r18
     dba:	30 95       	com	r19
     dbc:	83 23       	and	r24, r19
     dbe:	88 83       	st	Y, r24
		*out |= bit;
     dc0:	ec 91       	ld	r30, X
     dc2:	2e 2b       	or	r18, r30
     dc4:	2c 93       	st	X, r18
		SREG = oldSREG;
     dc6:	9f bf       	out	0x3f, r25	; 63
     dc8:	06 c0       	rjmp	.+12     	; 0xdd6 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
     dca:	8f b7       	in	r24, 0x3f	; 63
                cli();
     dcc:	f8 94       	cli
		*reg |= bit;
     dce:	e8 81       	ld	r30, Y
     dd0:	2e 2b       	or	r18, r30
     dd2:	28 83       	st	Y, r18
		SREG = oldSREG;
     dd4:	8f bf       	out	0x3f, r24	; 63
	}
}
     dd6:	df 91       	pop	r29
     dd8:	cf 91       	pop	r28
     dda:	08 95       	ret

00000ddc <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
     ddc:	1f 93       	push	r17
     dde:	cf 93       	push	r28
     de0:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
     de2:	28 2f       	mov	r18, r24
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	f9 01       	movw	r30, r18
     de8:	e8 50       	subi	r30, 0x08	; 8
     dea:	ff 4f       	sbci	r31, 0xFF	; 255
     dec:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
     dee:	f9 01       	movw	r30, r18
     df0:	e9 5e       	subi	r30, 0xE9	; 233
     df2:	fe 4f       	sbci	r31, 0xFE	; 254
     df4:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
     df6:	f9 01       	movw	r30, r18
     df8:	ea 5c       	subi	r30, 0xCA	; 202
     dfa:	fe 4f       	sbci	r31, 0xFE	; 254
     dfc:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
     dfe:	cc 23       	and	r28, r28
     e00:	c1 f0       	breq	.+48     	; 0xe32 <digitalWrite+0x56>
     e02:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
     e04:	81 11       	cpse	r24, r1
     e06:	0e 94 75 06 	call	0xcea	; 0xcea <turnOffPWM>

	out = portOutputRegister(port);
     e0a:	ec 2f       	mov	r30, r28
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	ee 0f       	add	r30, r30
     e10:	ff 1f       	adc	r31, r31
     e12:	eb 5a       	subi	r30, 0xAB	; 171
     e14:	fe 4f       	sbci	r31, 0xFE	; 254
     e16:	a5 91       	lpm	r26, Z+
     e18:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
     e1a:	9f b7       	in	r25, 0x3f	; 63
	cli();
     e1c:	f8 94       	cli

	if (val == LOW) {
     e1e:	11 11       	cpse	r17, r1
     e20:	04 c0       	rjmp	.+8      	; 0xe2a <digitalWrite+0x4e>
		*out &= ~bit;
     e22:	8c 91       	ld	r24, X
     e24:	d0 95       	com	r29
     e26:	d8 23       	and	r29, r24
     e28:	02 c0       	rjmp	.+4      	; 0xe2e <digitalWrite+0x52>
	} else {
		*out |= bit;
     e2a:	ec 91       	ld	r30, X
     e2c:	de 2b       	or	r29, r30
     e2e:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
     e30:	9f bf       	out	0x3f, r25	; 63
}
     e32:	df 91       	pop	r29
     e34:	cf 91       	pop	r28
     e36:	1f 91       	pop	r17
     e38:	08 95       	ret

00000e3a <_ZN7Serial_5writeEh>:
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		ret = breakValue;
		breakValue = -1;
	}
	return ret;
}
     e3a:	cf 93       	push	r28
     e3c:	df 93       	push	r29
     e3e:	1f 92       	push	r1
     e40:	cd b7       	in	r28, 0x3d	; 61
     e42:	de b7       	in	r29, 0x3e	; 62
     e44:	69 83       	std	Y+1, r22	; 0x01
     e46:	dc 01       	movw	r26, r24
     e48:	ed 91       	ld	r30, X+
     e4a:	fc 91       	ld	r31, X
     e4c:	02 80       	ldd	r0, Z+2	; 0x02
     e4e:	f3 81       	ldd	r31, Z+3	; 0x03
     e50:	e0 2d       	mov	r30, r0
     e52:	41 e0       	ldi	r20, 0x01	; 1
     e54:	50 e0       	ldi	r21, 0x00	; 0
     e56:	be 01       	movw	r22, r28
     e58:	6f 5f       	subi	r22, 0xFF	; 255
     e5a:	7f 4f       	sbci	r23, 0xFF	; 255
     e5c:	09 95       	icall
     e5e:	0f 90       	pop	r0
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	08 95       	ret

00000e66 <_ZN7Serial_4peekEv>:
     e66:	cf 93       	push	r28
     e68:	df 93       	push	r29
     e6a:	ec 01       	movw	r28, r24
     e6c:	8c 85       	ldd	r24, Y+12	; 0x0c
     e6e:	9d 85       	ldd	r25, Y+13	; 0x0d
     e70:	97 ff       	sbrs	r25, 7
     e72:	05 c0       	rjmp	.+10     	; 0xe7e <_ZN7Serial_4peekEv+0x18>
     e74:	82 e0       	ldi	r24, 0x02	; 2
     e76:	0e 94 37 02 	call	0x46e	; 0x46e <_Z8USB_Recvh>
     e7a:	9d 87       	std	Y+13, r25	; 0x0d
     e7c:	8c 87       	std	Y+12, r24	; 0x0c
     e7e:	8c 85       	ldd	r24, Y+12	; 0x0c
     e80:	9d 85       	ldd	r25, Y+13	; 0x0d
     e82:	df 91       	pop	r29
     e84:	cf 91       	pop	r28
     e86:	08 95       	ret

00000e88 <_ZN7Serial_17availableForWriteEv>:
     e88:	83 e0       	ldi	r24, 0x03	; 3
     e8a:	0e 94 4e 02 	call	0x49c	; 0x49c <_Z13USB_SendSpaceh>
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	08 95       	ret

00000e92 <_ZN7Serial_5flushEv>:
     e92:	83 e0       	ldi	r24, 0x03	; 3
     e94:	0c 94 cc 04 	jmp	0x998	; 0x998 <_Z9USB_Flushh>

00000e98 <_ZN7Serial_9availableEv>:
     e98:	fc 01       	movw	r30, r24
     e9a:	84 85       	ldd	r24, Z+12	; 0x0c
     e9c:	95 85       	ldd	r25, Z+13	; 0x0d
     e9e:	97 fd       	sbrc	r25, 7
     ea0:	06 c0       	rjmp	.+12     	; 0xeae <_ZN7Serial_9availableEv+0x16>
     ea2:	82 e0       	ldi	r24, 0x02	; 2
     ea4:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <_Z13USB_Availableh>
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	01 96       	adiw	r24, 0x01	; 1
     eac:	08 95       	ret
     eae:	82 e0       	ldi	r24, 0x02	; 2
     eb0:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <_Z13USB_Availableh>
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	08 95       	ret

00000eb8 <_ZN7Serial_4readEv>:
     eb8:	fc 01       	movw	r30, r24
     eba:	84 85       	ldd	r24, Z+12	; 0x0c
     ebc:	95 85       	ldd	r25, Z+13	; 0x0d
     ebe:	97 fd       	sbrc	r25, 7
     ec0:	05 c0       	rjmp	.+10     	; 0xecc <_ZN7Serial_4readEv+0x14>
     ec2:	2f ef       	ldi	r18, 0xFF	; 255
     ec4:	3f ef       	ldi	r19, 0xFF	; 255
     ec6:	35 87       	std	Z+13, r19	; 0x0d
     ec8:	24 87       	std	Z+12, r18	; 0x0c
     eca:	08 95       	ret
     ecc:	82 e0       	ldi	r24, 0x02	; 2
     ece:	0c 94 37 02 	jmp	0x46e	; 0x46e <_Z8USB_Recvh>

00000ed2 <_ZN7Serial_5writeEPKhj>:
     ed2:	cf 93       	push	r28
     ed4:	df 93       	push	r29
     ed6:	ec 01       	movw	r28, r24
     ed8:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <_ZL12_usbLineInfo+0x7>
     edc:	88 23       	and	r24, r24
     ede:	31 f0       	breq	.+12     	; 0xeec <_ZN7Serial_5writeEPKhj+0x1a>
     ee0:	83 e0       	ldi	r24, 0x03	; 3
     ee2:	0e 94 68 02 	call	0x4d0	; 0x4d0 <_Z8USB_SendhPKvi>
     ee6:	18 16       	cp	r1, r24
     ee8:	19 06       	cpc	r1, r25
     eea:	34 f0       	brlt	.+12     	; 0xef8 <_ZN7Serial_5writeEPKhj+0x26>
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	9b 83       	std	Y+3, r25	; 0x03
     ef2:	8a 83       	std	Y+2, r24	; 0x02
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	df 91       	pop	r29
     efa:	cf 91       	pop	r28
     efc:	08 95       	ret

00000efe <_Z16CDC_GetInterfacePh>:
     efe:	fc 01       	movw	r30, r24
     f00:	90 81       	ld	r25, Z
     f02:	9e 5f       	subi	r25, 0xFE	; 254
     f04:	90 83       	st	Z, r25
     f06:	42 e4       	ldi	r20, 0x42	; 66
     f08:	50 e0       	ldi	r21, 0x00	; 0
     f0a:	61 e7       	ldi	r22, 0x71	; 113
     f0c:	71 e0       	ldi	r23, 0x01	; 1
     f0e:	80 e8       	ldi	r24, 0x80	; 128
     f10:	0c 94 18 03 	jmp	0x630	; 0x630 <_Z15USB_SendControlhPKvi>

00000f14 <_Z9CDC_SetupR8USBSetup>:
     f14:	fc 01       	movw	r30, r24
     f16:	81 81       	ldd	r24, Z+1	; 0x01
     f18:	90 81       	ld	r25, Z
     f1a:	91 3a       	cpi	r25, 0xA1	; 161
     f1c:	59 f4       	brne	.+22     	; 0xf34 <_Z9CDC_SetupR8USBSetup+0x20>
     f1e:	81 32       	cpi	r24, 0x21	; 33
     f20:	09 f0       	breq	.+2      	; 0xf24 <_Z9CDC_SetupR8USBSetup+0x10>
     f22:	5c c0       	rjmp	.+184    	; 0xfdc <_Z9CDC_SetupR8USBSetup+0xc8>
     f24:	47 e0       	ldi	r20, 0x07	; 7
     f26:	50 e0       	ldi	r21, 0x00	; 0
     f28:	6b e0       	ldi	r22, 0x0B	; 11
     f2a:	71 e0       	ldi	r23, 0x01	; 1
     f2c:	80 e0       	ldi	r24, 0x00	; 0
     f2e:	0e 94 18 03 	call	0x630	; 0x630 <_Z15USB_SendControlhPKvi>
     f32:	52 c0       	rjmp	.+164    	; 0xfd8 <_Z9CDC_SetupR8USBSetup+0xc4>
     f34:	91 32       	cpi	r25, 0x21	; 33
     f36:	09 f0       	breq	.+2      	; 0xf3a <_Z9CDC_SetupR8USBSetup+0x26>
     f38:	51 c0       	rjmp	.+162    	; 0xfdc <_Z9CDC_SetupR8USBSetup+0xc8>
     f3a:	83 32       	cpi	r24, 0x23	; 35
     f3c:	69 f4       	brne	.+26     	; 0xf58 <_Z9CDC_SetupR8USBSetup+0x44>
     f3e:	82 81       	ldd	r24, Z+2	; 0x02
     f40:	93 81       	ldd	r25, Z+3	; 0x03
     f42:	a0 e0       	ldi	r26, 0x00	; 0
     f44:	b0 e0       	ldi	r27, 0x00	; 0
     f46:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_ZL10breakValue>
     f4a:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <_ZL10breakValue+0x1>
     f4e:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <_ZL10breakValue+0x2>
     f52:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <_ZL10breakValue+0x3>
     f56:	40 c0       	rjmp	.+128    	; 0xfd8 <_Z9CDC_SetupR8USBSetup+0xc4>
     f58:	80 32       	cpi	r24, 0x20	; 32
     f5a:	39 f4       	brne	.+14     	; 0xf6a <_Z9CDC_SetupR8USBSetup+0x56>
     f5c:	67 e0       	ldi	r22, 0x07	; 7
     f5e:	70 e0       	ldi	r23, 0x00	; 0
     f60:	8b e0       	ldi	r24, 0x0B	; 11
     f62:	91 e0       	ldi	r25, 0x01	; 1
     f64:	0e 94 3f 03 	call	0x67e	; 0x67e <_Z15USB_RecvControlPvi>
     f68:	05 c0       	rjmp	.+10     	; 0xf74 <_Z9CDC_SetupR8USBSetup+0x60>
     f6a:	82 32       	cpi	r24, 0x22	; 34
     f6c:	a9 f5       	brne	.+106    	; 0xfd8 <_Z9CDC_SetupR8USBSetup+0xc4>
     f6e:	82 81       	ldd	r24, Z+2	; 0x02
     f70:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_ZL12_usbLineInfo+0x7>
     f74:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <_updatedLUFAbootloader>
     f78:	88 23       	and	r24, r24
     f7a:	19 f0       	breq	.+6      	; 0xf82 <_Z9CDC_SetupR8USBSetup+0x6e>
     f7c:	ee ef       	ldi	r30, 0xFE	; 254
     f7e:	fa e0       	ldi	r31, 0x0A	; 10
     f80:	02 c0       	rjmp	.+4      	; 0xf86 <_Z9CDC_SetupR8USBSetup+0x72>
     f82:	e0 e0       	ldi	r30, 0x00	; 0
     f84:	f8 e0       	ldi	r31, 0x08	; 8
     f86:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <_ZL12_usbLineInfo>
     f8a:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <_ZL12_usbLineInfo+0x1>
     f8e:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <_ZL12_usbLineInfo+0x2>
     f92:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <_ZL12_usbLineInfo+0x3>
     f96:	80 3b       	cpi	r24, 0xB0	; 176
     f98:	94 40       	sbci	r25, 0x04	; 4
     f9a:	a1 05       	cpc	r26, r1
     f9c:	b1 05       	cpc	r27, r1
     f9e:	01 f5       	brne	.+64     	; 0xfe0 <_Z9CDC_SetupR8USBSetup+0xcc>
     fa0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <_ZL12_usbLineInfo+0x7>
     fa4:	80 fd       	sbrc	r24, 0
     fa6:	1c c0       	rjmp	.+56     	; 0xfe0 <_Z9CDC_SetupR8USBSetup+0xcc>
     fa8:	ee 3f       	cpi	r30, 0xFE	; 254
     faa:	2a e0       	ldi	r18, 0x0A	; 10
     fac:	f2 07       	cpc	r31, r18
     fae:	31 f0       	breq	.+12     	; 0xfbc <_Z9CDC_SetupR8USBSetup+0xa8>
     fb0:	80 81       	ld	r24, Z
     fb2:	91 81       	ldd	r25, Z+1	; 0x01
     fb4:	90 93 ff 0a 	sts	0x0AFF, r25	; 0x800aff <__bss_end+0x969>
     fb8:	80 93 fe 0a 	sts	0x0AFE, r24	; 0x800afe <__bss_end+0x968>
     fbc:	87 e7       	ldi	r24, 0x77	; 119
     fbe:	97 e7       	ldi	r25, 0x77	; 119
     fc0:	91 83       	std	Z+1, r25	; 0x01
     fc2:	80 83       	st	Z, r24
     fc4:	9b e0       	ldi	r25, 0x0B	; 11
     fc6:	88 e1       	ldi	r24, 0x18	; 24
     fc8:	0f b6       	in	r0, 0x3f	; 63
     fca:	f8 94       	cli
     fcc:	a8 95       	wdr
     fce:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
     fd2:	0f be       	out	0x3f, r0	; 63
     fd4:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
     fd8:	81 e0       	ldi	r24, 0x01	; 1
     fda:	08 95       	ret
     fdc:	80 e0       	ldi	r24, 0x00	; 0
     fde:	08 95       	ret
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	a8 95       	wdr
     fe6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
     fea:	88 61       	ori	r24, 0x18	; 24
     fec:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
     ff0:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
     ff4:	0f be       	out	0x3f, r0	; 63
     ff6:	a8 95       	wdr
     ff8:	ee 3f       	cpi	r30, 0xFE	; 254
     ffa:	8a e0       	ldi	r24, 0x0A	; 10
     ffc:	f8 07       	cpc	r31, r24
     ffe:	39 f0       	breq	.+14     	; 0x100e <_Z9CDC_SetupR8USBSetup+0xfa>
    1000:	80 91 fe 0a 	lds	r24, 0x0AFE	; 0x800afe <__bss_end+0x968>
    1004:	90 91 ff 0a 	lds	r25, 0x0AFF	; 0x800aff <__bss_end+0x969>
    1008:	91 83       	std	Z+1, r25	; 0x01
    100a:	80 83       	st	Z, r24
    100c:	e5 cf       	rjmp	.-54     	; 0xfd8 <_Z9CDC_SetupR8USBSetup+0xc4>
    100e:	10 92 ff 0a 	sts	0x0AFF, r1	; 0x800aff <__bss_end+0x969>
    1012:	10 92 fe 0a 	sts	0x0AFE, r1	; 0x800afe <__bss_end+0x968>
    1016:	e0 cf       	rjmp	.-64     	; 0xfd8 <_Z9CDC_SetupR8USBSetup+0xc4>

00001018 <_GLOBAL__sub_I__updatedLUFAbootloader>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    1018:	e9 e3       	ldi	r30, 0x39	; 57
    101a:	f1 e0       	ldi	r31, 0x01	; 1
    101c:	13 82       	std	Z+3, r1	; 0x03
    101e:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    1020:	88 ee       	ldi	r24, 0xE8	; 232
    1022:	93 e0       	ldi	r25, 0x03	; 3
    1024:	a0 e0       	ldi	r26, 0x00	; 0
    1026:	b0 e0       	ldi	r27, 0x00	; 0
    1028:	84 83       	std	Z+4, r24	; 0x04
    102a:	95 83       	std	Z+5, r25	; 0x05
    102c:	a6 83       	std	Z+6, r26	; 0x06
    102e:	b7 83       	std	Z+7, r27	; 0x07
class Serial_ : public Stream
{
private:
	int peek_buffer;
public:
	Serial_() { peek_buffer = -1; };
    1030:	87 e1       	ldi	r24, 0x17	; 23
    1032:	91 e0       	ldi	r25, 0x01	; 1
    1034:	91 83       	std	Z+1, r25	; 0x01
    1036:	80 83       	st	Z, r24
    1038:	8f ef       	ldi	r24, 0xFF	; 255
    103a:	9f ef       	ldi	r25, 0xFF	; 255
    103c:	95 87       	std	Z+13, r25	; 0x0d
    103e:	84 87       	std	Z+12, r24	; 0x0c
    1040:	08 95       	ret

00001042 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    1042:	08 95       	ret

00001044 <_ZN13PluggableUSB_12getInterfaceEPh>:
		_initEndpoints[lastEp] = node->endpointType[i];
		lastEp++;
	}
	return true;
	// restart USB layer???
}
    1044:	ef 92       	push	r14
    1046:	ff 92       	push	r15
    1048:	0f 93       	push	r16
    104a:	1f 93       	push	r17
    104c:	cf 93       	push	r28
    104e:	df 93       	push	r29
    1050:	7b 01       	movw	r14, r22
    1052:	fc 01       	movw	r30, r24
    1054:	c2 81       	ldd	r28, Z+2	; 0x02
    1056:	d3 81       	ldd	r29, Z+3	; 0x03
    1058:	00 e0       	ldi	r16, 0x00	; 0
    105a:	10 e0       	ldi	r17, 0x00	; 0
    105c:	20 97       	sbiw	r28, 0x00	; 0
    105e:	81 f0       	breq	.+32     	; 0x1080 <_ZN13PluggableUSB_12getInterfaceEPh+0x3c>
    1060:	e8 81       	ld	r30, Y
    1062:	f9 81       	ldd	r31, Y+1	; 0x01
    1064:	02 80       	ldd	r0, Z+2	; 0x02
    1066:	f3 81       	ldd	r31, Z+3	; 0x03
    1068:	e0 2d       	mov	r30, r0
    106a:	b7 01       	movw	r22, r14
    106c:	ce 01       	movw	r24, r28
    106e:	09 95       	icall
    1070:	97 fd       	sbrc	r25, 7
    1072:	08 c0       	rjmp	.+16     	; 0x1084 <_ZN13PluggableUSB_12getInterfaceEPh+0x40>
    1074:	08 0f       	add	r16, r24
    1076:	19 1f       	adc	r17, r25
    1078:	08 84       	ldd	r0, Y+8	; 0x08
    107a:	d9 85       	ldd	r29, Y+9	; 0x09
    107c:	c0 2d       	mov	r28, r0
    107e:	ee cf       	rjmp	.-36     	; 0x105c <_ZN13PluggableUSB_12getInterfaceEPh+0x18>
    1080:	c8 01       	movw	r24, r16
    1082:	02 c0       	rjmp	.+4      	; 0x1088 <_ZN13PluggableUSB_12getInterfaceEPh+0x44>
    1084:	8f ef       	ldi	r24, 0xFF	; 255
    1086:	9f ef       	ldi	r25, 0xFF	; 255
    1088:	df 91       	pop	r29
    108a:	cf 91       	pop	r28
    108c:	1f 91       	pop	r17
    108e:	0f 91       	pop	r16
    1090:	ff 90       	pop	r15
    1092:	ef 90       	pop	r14
    1094:	08 95       	ret

00001096 <_ZN13PluggableUSB_13getDescriptorER8USBSetup>:
    1096:	0f 93       	push	r16
    1098:	1f 93       	push	r17
    109a:	cf 93       	push	r28
    109c:	df 93       	push	r29
    109e:	8b 01       	movw	r16, r22
    10a0:	fc 01       	movw	r30, r24
    10a2:	c2 81       	ldd	r28, Z+2	; 0x02
    10a4:	d3 81       	ldd	r29, Z+3	; 0x03
    10a6:	20 97       	sbiw	r28, 0x00	; 0
    10a8:	71 f0       	breq	.+28     	; 0x10c6 <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x30>
    10aa:	e8 81       	ld	r30, Y
    10ac:	f9 81       	ldd	r31, Y+1	; 0x01
    10ae:	04 80       	ldd	r0, Z+4	; 0x04
    10b0:	f5 81       	ldd	r31, Z+5	; 0x05
    10b2:	e0 2d       	mov	r30, r0
    10b4:	b8 01       	movw	r22, r16
    10b6:	ce 01       	movw	r24, r28
    10b8:	09 95       	icall
    10ba:	00 97       	sbiw	r24, 0x00	; 0
    10bc:	31 f4       	brne	.+12     	; 0x10ca <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x34>
    10be:	08 84       	ldd	r0, Y+8	; 0x08
    10c0:	d9 85       	ldd	r29, Y+9	; 0x09
    10c2:	c0 2d       	mov	r28, r0
    10c4:	f0 cf       	rjmp	.-32     	; 0x10a6 <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x10>
    10c6:	80 e0       	ldi	r24, 0x00	; 0
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	1f 91       	pop	r17
    10d0:	0f 91       	pop	r16
    10d2:	08 95       	ret

000010d4 <_ZN13PluggableUSB_12getShortNameEPc>:
    10d4:	0f 93       	push	r16
    10d6:	1f 93       	push	r17
    10d8:	cf 93       	push	r28
    10da:	df 93       	push	r29
    10dc:	8b 01       	movw	r16, r22
    10de:	fc 01       	movw	r30, r24
    10e0:	c2 81       	ldd	r28, Z+2	; 0x02
    10e2:	d3 81       	ldd	r29, Z+3	; 0x03
    10e4:	20 97       	sbiw	r28, 0x00	; 0
    10e6:	71 f0       	breq	.+28     	; 0x1104 <_ZN13PluggableUSB_12getShortNameEPc+0x30>
    10e8:	e8 81       	ld	r30, Y
    10ea:	f9 81       	ldd	r31, Y+1	; 0x01
    10ec:	06 80       	ldd	r0, Z+6	; 0x06
    10ee:	f7 81       	ldd	r31, Z+7	; 0x07
    10f0:	e0 2d       	mov	r30, r0
    10f2:	b8 01       	movw	r22, r16
    10f4:	ce 01       	movw	r24, r28
    10f6:	09 95       	icall
    10f8:	08 0f       	add	r16, r24
    10fa:	11 1d       	adc	r17, r1
    10fc:	08 84       	ldd	r0, Y+8	; 0x08
    10fe:	d9 85       	ldd	r29, Y+9	; 0x09
    1100:	c0 2d       	mov	r28, r0
    1102:	f0 cf       	rjmp	.-32     	; 0x10e4 <_ZN13PluggableUSB_12getShortNameEPc+0x10>
    1104:	f8 01       	movw	r30, r16
    1106:	10 82       	st	Z, r1
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	1f 91       	pop	r17
    110e:	0f 91       	pop	r16
    1110:	08 95       	ret

00001112 <_ZN13PluggableUSB_5setupER8USBSetup>:
    1112:	0f 93       	push	r16
    1114:	1f 93       	push	r17
    1116:	cf 93       	push	r28
    1118:	df 93       	push	r29
    111a:	8b 01       	movw	r16, r22
    111c:	fc 01       	movw	r30, r24
    111e:	c2 81       	ldd	r28, Z+2	; 0x02
    1120:	d3 81       	ldd	r29, Z+3	; 0x03
    1122:	20 97       	sbiw	r28, 0x00	; 0
    1124:	71 f0       	breq	.+28     	; 0x1142 <_ZN13PluggableUSB_5setupER8USBSetup+0x30>
    1126:	e8 81       	ld	r30, Y
    1128:	f9 81       	ldd	r31, Y+1	; 0x01
    112a:	01 90       	ld	r0, Z+
    112c:	f0 81       	ld	r31, Z
    112e:	e0 2d       	mov	r30, r0
    1130:	b8 01       	movw	r22, r16
    1132:	ce 01       	movw	r24, r28
    1134:	09 95       	icall
    1136:	81 11       	cpse	r24, r1
    1138:	05 c0       	rjmp	.+10     	; 0x1144 <_ZN13PluggableUSB_5setupER8USBSetup+0x32>
    113a:	08 84       	ldd	r0, Y+8	; 0x08
    113c:	d9 85       	ldd	r29, Y+9	; 0x09
    113e:	c0 2d       	mov	r28, r0
    1140:	f0 cf       	rjmp	.-32     	; 0x1122 <_ZN13PluggableUSB_5setupER8USBSetup+0x10>
    1142:	80 e0       	ldi	r24, 0x00	; 0
    1144:	df 91       	pop	r29
    1146:	cf 91       	pop	r28
    1148:	1f 91       	pop	r17
    114a:	0f 91       	pop	r16
    114c:	08 95       	ret

0000114e <_Z12PluggableUSBv>:

PluggableUSB_& PluggableUSB()
{
	static PluggableUSB_ obj;
    114e:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <_ZGVZ12PluggableUSBvE3obj>
    1152:	81 11       	cpse	r24, r1
    1154:	0d c0       	rjmp	.+26     	; 0x1170 <_Z12PluggableUSBv+0x22>
	return obj;
}

PluggableUSB_::PluggableUSB_() : lastIf(CDC_ACM_INTERFACE + CDC_INTERFACE_COUNT),
                                 lastEp(CDC_FIRST_ENDPOINT + CDC_ENPOINT_COUNT),
                                 rootNode(NULL)
    1156:	82 e0       	ldi	r24, 0x02	; 2
    1158:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <_ZZ12PluggableUSBvE3obj>
    115c:	84 e0       	ldi	r24, 0x04	; 4
    115e:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <_ZZ12PluggableUSBvE3obj+0x1>
    1162:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <_ZZ12PluggableUSBvE3obj+0x3>
    1166:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <_ZZ12PluggableUSBvE3obj+0x2>
	// restart USB layer???
}

PluggableUSB_& PluggableUSB()
{
	static PluggableUSB_ obj;
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <_ZGVZ12PluggableUSBvE3obj>
	return obj;
}
    1170:	8a e8       	ldi	r24, 0x8A	; 138
    1172:	91 e0       	ldi	r25, 0x01	; 1
    1174:	08 95       	ret

00001176 <__tablejump2__>:
    1176:	ee 0f       	add	r30, r30
    1178:	ff 1f       	adc	r31, r31
    117a:	05 90       	lpm	r0, Z+
    117c:	f4 91       	lpm	r31, Z
    117e:	e0 2d       	mov	r30, r0
    1180:	09 94       	ijmp

00001182 <_exit>:
    1182:	f8 94       	cli

00001184 <__stop_program>:
    1184:	ff cf       	rjmp	.-2      	; 0x1184 <__stop_program>
